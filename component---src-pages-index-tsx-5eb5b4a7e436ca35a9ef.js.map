{"version":3,"sources":["webpack:///./src/component/article.tsx","webpack:///./src/component/pagination.tsx","webpack:///./src/pages/index.tsx"],"names":["Article","props","data","useStaticQuery","className","style","gMb100","gMb30","classNames","dBlock","gColorGrayDarkV4","gFontWeight700","gFontSize12","textUppercase","mb2","date","h4","gColorBlack","gFontWeight600","mb3","uLinkV5","gColorPurpleHover","to","path","title","gLineHeight18","description","listInline","gBrdY","gBrdGrayLightV3","gFontSize13","gPy13","mb0","listInlineItem","mr2","dInlineBlock","gPx15","gPy5","gWidth20","gHeight20","roundedCircle","src","file","childImageSharp","fixed","alt","floatRight","shortname","config","url","identifier","id","gColorWhiteHover","gBgPurpleHover","rounded","gTransition03","gTextUnderlineNoneHover","width","height","alignMiddle","gFontSizeDefault","mr1","icon","faBookOpen","Pagination","totalPage","Math","ceil","totalCount","perPage","goToPage","targetPage","hasPreviousPage","currentPage","aria-hidden","faAngleLeft","hasNextPage","faAngleRight","Index","pageInfo","allMdx","edges","map","node","key","frontmatter","fields","tags"],"mappings":"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","file":"component---src-pages-index-tsx-5eb5b4a7e436ca35a9ef.js","sourcesContent":["import classNames from \"classnames\";\nimport style from \"../assets/scss/index.module.scss\";\nimport React from \"react\";\nimport PropTypes from 'prop-types'\nimport {graphql, Link, useStaticQuery} from \"gatsby\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBookOpen} from '@fortawesome/free-solid-svg-icons'\nimport {CommentCount} from \"disqus-react\";\n\nconst Article: React.FunctionComponent<any> = (props: any) => {\n    const data = useStaticQuery(graphql`\n        query {\n            file(relativePath: {eq: \"myimage.jpg\"}) {\n                childImageSharp {\n                    fixed(width: 20) {\n                        ...GatsbyImageSharpFixed\n                    }\n                }\n            }\n        }\n    `)\n    return <article className={style.gMb100}>\n        <div className={style.gMb30}>\n            <span\n                className={classNames(style.dBlock, style.gColorGrayDarkV4, style.gFontWeight700, style.gFontSize12, style.textUppercase, style.mb2)}>\n                {props.date}\n            </span>\n            <h2 className={classNames(style.h4, style.gColorBlack, style.gFontWeight600, style.mb3)}>\n                <Link className={classNames(style.uLinkV5, style.gColorBlack, style.gColorPurpleHover)}\n                      to={`/posts${props.path}`}>\n                    {props.title}\n                </Link>\n            </h2>\n            <p className={classNames(style.gColorGrayDarkV4, style.gLineHeight18)}>\n                {props.description}\n            </p>\n        </div>\n\n        <ul className={classNames(style.listInline, style.gBrdY, style.gBrdGrayLightV3, style.gFontSize13, style.gPy13, style.mb0)}>\n            <li className={classNames(style.listInlineItem, style.gColorGrayDarkV4, style.mr2)}>\n                  <span className={classNames(style.dInlineBlock,\n                      style.gColorGrayDarkV4,\n                      style.gPx15,\n                      style.gPy5)}>\n                      <img className={classNames(style.gWidth20,\n                               style.gHeight20,\n                               style.roundedCircle,\n                               style.mr2)}\n                           src={data.file.childImageSharp.fixed.src} alt=\"Bruno Jan\"/>\n                      Bruno Jan\n                  </span>\n            </li>\n            <li className={classNames(style.listInlineItem, style.gColorGrayDarkV4, style.floatRight)}>\n                <span className={classNames(style.dInlineBlock,\n                    style.gColorGrayDarkV4,\n                    style.gPx15,\n                    style.gPy5)}>\n                    <CommentCount\n                        shortname={\"yi-shiuan\"}\n                        config={\n                            {\n                                url: `https://yi-shiuan.github.io${props.path}`,\n                                identifier: props.id,\n                                title: props.title,\n                            }\n                        }>\n                    Comments\n                </CommentCount>\n                </span>\n                <Link className={classNames(style.dInlineBlock,\n                    style.gColorGrayDarkV4,\n                    style.gColorWhiteHover,\n                    style.gBgPurpleHover,\n                    style.rounded,\n                    style.gTransition03,\n                    style.gTextUnderlineNoneHover,\n                    style.gPx15,\n                    style.gPy5)}\n                      to={`/posts${props.path}`}>\n                    <FontAwesomeIcon width={15.75}\n                                     height={12.25}\n                                     className={classNames(style.alignMiddle, style.gFontSizeDefault, style.mr1)}\n                                     icon={faBookOpen}/>\n                    Read more\n                </Link>\n\n            </li>\n\n\n        </ul>\n    </article>\n}\n\nArticle.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    date: PropTypes.string,\n    path: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default Article;","import React, {FunctionComponent} from 'react';\nimport classNames from 'classnames';\nimport * as style from \"../assets/scss/index.module.scss\";\nimport {faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Link} from \"gatsby\";\n\nexport type PaginationProps = {\n    hasPreviousPage: boolean\n    hasNextPage: boolean\n    currentPage: number;\n    totalCount: number;\n    perPage: number\n}\n\nexport const Pagination: FunctionComponent<PaginationProps> = (props: PaginationProps): any => {\n    const totalPage: number = Math.ceil(props.totalCount / props.perPage);\n\n    const goToPage: any = (targetPage: number): any => {\n        if (targetPage === 1) {\n            return \"/\"\n        }\n\n        return `/page/${targetPage}`;\n    }\n\n\n    return <nav className={style.textCenter}>\n        <ul className={style.listInline}>\n            <li className={classNames(style.listInlineItem, style.floatSmLeft)}>\n                {\n                    props.hasPreviousPage ?\n                    <Link className={classNames(style.uPaginationV1Item,\n                                                    style.gBrdAround,\n                                                    style.gColorPurple,\n                                                    style.gBrdGrayLightV3,\n                                                    style.gBgPurpleHover,\n                                                    style.gBrdPurpleHover,\n                                                    style.gColorWhiteHover,\n                                                    style.gRounded50,\n                                                    style.gPa716)}\n                              to={goToPage(props.currentPage - 1)}>\n                        <span aria-hidden=\"true\">\n                            <FontAwesomeIcon className={style.mr2} icon={faAngleLeft}/>\n                            Previous\n                        </span>\n                    </Link> : \"\"\n                }\n            </li>\n            <li className={classNames(style.listInlineItem, style.fontItalic)}>\n                <a className={classNames(style.gColorPurple, style.gPa716)}>{props.currentPage} of {totalPage}</a>\n            </li>\n            <li className={classNames(style.listInlineItem, style.floatSmRight)}>\n                {\n                    props.hasNextPage ? <Link className={classNames(style.uPaginationV1Item,\n                                                                    style.gBrdAround,\n                                                                    style.gColorPurple,\n                                                                    style.gBrdGrayLightV3,\n                                                                    style.gBgPurpleHover,\n                                                                    style.gBrdPurpleHover,\n                                                                    style.gColorWhiteHover,\n                                                                    style.gRounded50,\n                                                                    style.gPa716)}\n                                              to={goToPage(props.currentPage + 1)}>\n                    <span aria-hidden=\"true\">\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t<FontAwesomeIcon className={style.ml2} icon={faAngleRight}/>\n                        </span>\n                    </Link> : \"\"\n                }\n\n\n            </li>\n        </ul>\n    </nav>\n};","import React from \"react\"\nimport * as style from \"../assets/scss/index.module.scss\";\nimport Article from \"../component/article\";\nimport Layout from \"../component/layout\";\nimport {graphql, Link} from \"gatsby\";\nimport PropTypes from 'prop-types'\nimport {Pagination} from \"../component/pagination\";\n\nconst Index = (props: any) => {\n    const {allMdx: {pageInfo}} = props.data;\n    return <Layout>\n        <div className={style.gPl20Lg}>\n            {\n                props.data.allMdx.edges.map(({node}: any) => {\n                    return <Article\n                        key={node.id}\n                        id={node.id}\n                        title={node.frontmatter.title}\n                        date={node.frontmatter.date}\n                        description={node.frontmatter.description}\n                        path={node.fields.path}\n                        tags={node.frontmatter.tags}/>\n                })\n            }\n        </div>\n\n        <Pagination {...pageInfo}  />\n    </Layout>\n}\n\nIndex.propTypes = {\n    data: PropTypes.object.isRequired,\n    pageContext: PropTypes.shape({\n        nextPagePath: PropTypes.string,\n        previousPagePath: PropTypes.string,\n    }),\n}\n\nexport const postsQuery = graphql`\n    query($limit: Int! = 10, $skip: Int! = 0) {\n        allMdx(\n            filter: {fileAbsolutePath: {regex: \"//posts//\"}, internal: {type: {eq: \"Mdx\"}}, frontmatter: {published: {eq: true}}},\n            sort: {fields: frontmatter___date, order: DESC},\n            skip: $skip,\n            limit: $limit\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        date(formatString: \"DD MMM YYYY\")\n                    }\n                    fields {\n                        path\n                    }\n                }\n            }\n            pageInfo {\n                currentPage\n                totalCount\n                perPage\n                hasPreviousPage\n                hasNextPage\n            }\n        }\n    }\n`\n\nexport default Index;"],"sourceRoot":""}