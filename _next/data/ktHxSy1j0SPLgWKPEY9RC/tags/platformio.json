{"pageProps":{"posts":[{"id":1654732800,"fileName":"nodemcu-esp8266-platformio-with-clion","url":"2022/06/09/nodemcu-esp8266-platformio-with-clion","title":"使用Clion搭配platformio開發esp8266","description":"最近想把家中的電器可以跟apple homekit結合在一起省去一些麻煩順便可以帶來生活更好的狀態，但apple homekit的冷氣控制一個就要3700原， 對於家中有六台冷氣的我有點小貴，所以決定自己開發這樣的產品...順便也改造一下不太好用的窗簾機器人，讓他可以直接支援apple homekit，不需要再透過`捷徑`的方式來支援homekit\n在開始之前研究了一下許多arduino與Raspberry Pi兩者之間的選擇，發現了arduino在整個生態系來說完整不少，缺點是他基本上只支援C/C++的開發... Raspberry Pi 倒是可以使用.net或是node.js等等的語言，但許多的控制器或是傳感器支援的數量較少，並且價格也比較昂貴所以最後選擇了arduino， arduino中也有許多不同的板子，在選擇的時候的非常的困擾...後來我選擇了由樂鑫開發的ESP系列的板子好處是他已經內建了wifi功能， 所以可以直接使用不需要再加上wifi模組！","date":"2022-06-09T00:00:00.000Z","tags":["iot","platformio","arduino","esp"],"published":true,"content":"\n最近想把家中的電器可以跟apple homekit結合在一起省去一些麻煩順便可以帶來生活更好的狀態，但apple homekit的冷氣控制一個就要3700原，\n對於家中有六台冷氣的我有點小貴，所以決定自己開發這樣的產品...順便也改造一下不太好用的窗簾機器人，讓他可以直接支援apple homekit，不需要再透過`捷徑`的方式來支援homekit\n\n在開始之前研究了一下許多arduino與Raspberry Pi兩者之間的選擇，發現了arduino在整個生態系來說完整不少，缺點是他基本上只支援C/C++的開發...\nRaspberry Pi 倒是可以使用.net或是node.js等等的語言，但許多的控制器或是傳感器支援的數量較少，並且價格也比較昂貴所以最後選擇了arduino，\narduino中也有許多不同的板子，在選擇的時候的非常的困擾...後來我選擇了由樂鑫開發的ESP系列的板子好處是他已經內建了wifi功能，\n所以可以直接使用不需要再加上wifi模組！\n\n### CLion Plugin設定\n\nJetBrains開發工具真的都不錯所以我開發iot時我也選用了JetBrains的工具，在研究的時候也有人使用vs code跟arduino IDE來開發，CLion的安裝過程就不在這邊說了\n\nCLion在開發arduino必要安裝的套件有兩個，一個是`Arduino Support`另一個是`PlatformIO for CLion`這兩個就是圖片中第一個與第五個plugin，其他的你可以選用來安裝。\n\n![已安裝的CLion Plugins](nodemcu-esp8266-platformio-with-clion/plugins.png)\n\n### PlatformIO cli 安裝\n\n系統安裝需要有python3，在mac中已經有內建的python3，所以透過pip安裝platformio就可以或是透過Homebrew安裝也可以\n\n```shell\n# PIP install\npip3 install platformio\n# Homebrew 安裝\nbrew install platformio\n```\n> 透過python安裝時，一定要使用python 3.8以上的版本，不然會失敗\n\n### 新增專案\n\nESP8266是NodeMCU ESP-12E的版本，所以這邊選擇NodeMCU下的ESP-12E的專案類型\n\n![CLion 新增專案](https://cdn.adhome.com.tw/blogger/nodemcu-esp8266-platformio-with-clion/new-project.png)\n\n建立完成後就會看到下面這張圖片的狀態一樣，接下來只要把程式碼寫到`src/main.cpp`就可以上傳到ESP8266的板子上了！\n\n![CLion 專案初始](https://cdn.adhome.com.tw/blogger/nodemcu-esp8266-platformio-with-clion/project-init-folder.png)\n"},{"id":1654041600,"fileName":"arduino-use-platformio-upload-error","url":"2022/06/01/arduino-use-platformio-upload-error","title":"使用platformio上傳arduino時出現錯誤代碼(0107)","description":"第一次接觸arduino，很開心地寫下了一個閃爍板子上的LED程式碼後要上傳到板子，結果上傳時發生了錯誤 出現了Failed to write to target RAM (result was 0107)這樣的錯誤代碼，試了網路上很多的方式都沒有成功，最後發現了原來serial port 不正確...","date":"2022-06-01T00:00:00.000Z","tags":["iot","platformio","arduino"],"published":true,"content":"\n第一次接觸arduino，很開心地寫下了一個閃爍板子上的LED程式碼後要上傳到板子，結果上傳時發生了錯誤\n出現了Failed to write to target RAM (result was 0107)這樣的錯誤代碼，試了網路上很多的方式都沒有成功，最後發現了原來serial port\n不正確...\n\n以下是上傳時發生的錯誤訊息資料\n```text\n/usr/local/bin/platformio -c clion run --target upload -e nodemcuv2\nProcessing nodemcuv2 (platform: espressif8266; board: nodemcuv2; framework: arduino)\n\nVerbose mode can be enabled via `-v, --verbose` option\nCONFIGURATION: https://docs.platformio.org/page/boards/espressif8266/nodemcuv2.html\nPLATFORM: Espressif 8266 (3.2.0) > NodeMCU 1.0 (ESP-12E Module)\nHARDWARE: ESP8266 80MHz, 80KB RAM, 4MB Flash\nPACKAGES:\n - framework-arduinoespressif8266 @ 3.30002.0 (3.0.2)\n - tool-esptool @ 1.413.0 (4.13)\n - tool-esptoolpy @ 1.30000.201119 (3.0.0)\n - tool-mklittlefs @ 1.203.210628 (2.3)\n - tool-mkspiffs @ 1.200.0 (2.0)\n - toolchain-xtensa @ 2.100300.210717 (10.3.0)\nLDF: Library Dependency Finder -> https://bit.ly/configure-pio-ldf\nLDF Modes: Finder ~ chain, Compatibility ~ soft\nFound 35 compatible libraries\nScanning dependencies...\nNo dependencies\nBuilding in release mode\nRetrieving maximum program size .pio/build/nodemcuv2/firmware.elf\nChecking size .pio/build/nodemcuv2/firmware.elf\nAdvanced Memory Usage is available via \"PlatformIO Home > Project Inspect\"\nRAM:   [===       ]  34.2% (used 28032 bytes from 81920 bytes)\nFlash: [===       ]  25.4% (used 265729 bytes from 1044464 bytes)\nConfiguring upload protocol...\nAVAILABLE: espota, esptool\nCURRENT: upload_protocol = esptool\nLooking for upload port...\nAuto-detected: /dev/cu.usbmodem53770161961\nUploading .pio/build/nodemcuv2/firmware.bin\nesptool.py v3.0\nSerial port /dev/cu.usbmodem53770161961\nConnecting....\nChip is ESP8266EX\nFeatures: WiFi\nCrystal is 26MHz\nMAC: e8:db:84:df:34:f7\nUploading stub...\n\nA fatal error occurred: Failed to write to target RAM (result was 0107)\n*** [upload] Error 2\n [FAILED] Took 2.01 seconds\n\nProcess finished with exit code 1\n```\n\n### 確認線材\n\n因為板子上的usb介面事mirco usb的介面，這個介面很多的線材是只有充電功能而已無法做資料傳輸，所以...首先要先確定你的線材是不是可以做資料傳輸的用途，\n否則做了再多的工作可能都無法上傳成功\n\n因此我還上了pchome購買了usb type-c to mirco usb的資料傳輸線...\n\n### 驅動程式\n\n我使用的板子是nodeMCU ESP-12E(ESP-8266的板子，晶片是CH9102X)，搭配的事CLion的IDE開發工具\n\n在網路上找到的問題主要都是第一次上傳到板子沒有安裝相對應的驅動程式所以導致錯誤發生，如果發生這個狀態好解決，安裝相對應的驅動程式就可以解決了\nESP8266的晶片有兩種一種是CH9102另一種是CP2102，網路上搜尋的時候還會出現CH340相關的資料，CH340跟CH9102是相同的所以安裝的時候可以找到CH34x的驅動安裝後即可\n但...如果還是不行，可以先確定一下電腦是否有抓到板子在做下一步\n\n```shell\npio device list\n```\n以下是我的output資訊，有看到`/dev/cu.xxxxxx`的資料，就表示真的有抓到板子囉！但如果看到了這樣的輸出，還是出現了\n`A fatal error occurred: Failed to write to target RAM (result was 0107)`的錯誤，該怎麼辦？\n\n```shell\n/dev/cu.BLTH\n------------\nHardware ID: n/a\nDescription: n/a\n\n/dev/cu.Bluetooth-Incoming-Port\n-------------------------------\nHardware ID: n/a\nDescription: n/a\n\n/dev/cu.wchusbserial53770161961\n-------------------------------\nHardware ID: USB VID:PID=1A86:55D4 SER=5377016196 LOCATION=20-2\nDescription: USB Single Serial\n\n/dev/cu.usbmodem53770161961\n---------------------------\nHardware ID: USB VID:PID=1A86:55D4 SER=5377016196 LOCATION=20-2\nDescription: USB Single Serial\n```\n\n### 確認upload port的設定\n\n安裝驅動跟確認線材的問題我卡了許久，也確認了許多次數後我發現我的輸出錯誤都是在使用`/dev/cu.usbmodem53770161961`這個serial port上傳，\n然後偶爾會出現資院忙碌中的錯誤\n```shell\ncould not open port '/dev/cu.usbmodem53770161961': [Errno 16] could not open port /dev/cu.usbmodem53770161961: [Errno 16] Resource busy:.....\n```\n\n在查詢資料過程中想起了一個設定，那就是指定上傳的serial port想說隨便試試看是不是因為serial port的問題...畢竟每次都卡在同一個port上乾脆換一個試試看\n所以我在platfromio.ini這個檔案上增加了一行upload_port的設定，沒想到就出現成功的資訊了！如果你在pio device list看到兩個port這個方法可以試試看，或許有用\n\n```text\n[env:nodemcuv2]\nplatform = espressif8266\nboard = nodemcuv2\nframework = arduino\nupload_port = /dev/cu.wchusbserial53770161961\n```\n"}],"allTags":{"git":1,"vue":1,"nuxt":1,"vite":1,"devops":8,"study4":2,"dotnetconf":2,"aws":5,"frontend":2,"next.js":4,"react":5,"i18n":1,"gatsby.js":1,"postgresql":1,"database":2,"dotnet":1,"prevision":6,"iot":2,"platformio":2,"arduino":2,"esp":1,"elk":3,"azure":4,"vulnerability":1,"ssl":2,"vmss":1,"cd":3,"selenium":2,"tdd":1,"jest":1,"layout":1,"ec2":1,"iac":1,"terraform":1,"ci":1,"jenkins":1,"ecs":1,"ansible":1,"redis":2,"protobuf":2,"serialize":2,"deserialize":2,"pub":1,"sub":1,"notify":1}},"__N_SSG":true}