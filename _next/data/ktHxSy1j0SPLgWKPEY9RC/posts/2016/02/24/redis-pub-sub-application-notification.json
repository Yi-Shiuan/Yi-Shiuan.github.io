{"pageProps":{"id":1456314909,"fileName":"redis-pub-sub-application-notification","url":"2016/02/24/redis-pub-sub-application-notification","title":"【Redis】Redis Pub/Sub 製作應用程式間推播通知","description":"在很多時候我們的部屬環境是很複雜的，無法使用單一個應用程式來解決我們的問題...（例如：Windows server與Linux Server、多個網站或多個不同類型執行個體、網站搭配console應用程式）此時當應用程式間需要配合時是一個很重要的議題，很多人會把資料存放到資料庫，應用程式在定期去擷取尚未處理的資料，等相關資料處理完畢後再到資料庫注記哪些記錄是已經處理完畢的，在這樣的軟體設計與環境相對簡單許多，但是在系統繁忙的時間中，這可不是一個樂觀的狀態了..\n現在Redis具有這樣的功能，可以協助我們設計應用程式間可以互相配合的一個機制，如此一來我們就不需要在透過定期存取資料庫，相關的訊息或相關的資料可以及時的處理！","date":"2016-02-24T11:55:09.000Z","tags":["redis","pub","sub","notify"],"published":true,"content":"\n## 寫在前面\n\n在很多時候我們的部屬環境是很複雜的，無法使用單一個應用程式來解決我們的問題...（例如：Windows server與Linux Server、多個網站或多個不同類型執行個體、網站搭配console應用程式）此時當應用程式間需要配合時是一個很重要的議題，很多人會把資料存放到資料庫，應用程式在定期去擷取尚未處理的資料，等相關資料處理完畢後再到資料庫注記哪些記錄是已經處理完畢的，在這樣的軟體設計與環境相對簡單許多，但是在系統繁忙的時間中，這可不是一個樂觀的狀態了..\n\n現在Redis具有這樣的功能，可以協助我們設計應用程式間可以互相配合的一個機制，如此一來我們就不需要在透過定期存取資料庫，相關的訊息或相關的資料可以及時的處理！\n\n## Redis Command\n在使用推播前需要先瞭解三個指令，這三個指令是做應用程式推播時相關的指令\n\n### Publish\n\n#### 官網的說明\n>Available since 2.0.0.\n>\n>**Time complexity**: O(N+M) where N is the number of clients subscribed to the receiving channel and M is the total number of subscribed patterns (by any client).\n>\n>Postss a message to the given channel.\n\nRedis最低版本：2.0\n這個指令主要的用途就是將訊息推進某一個頻道中。\n而時間複雜度是：O(N+M)，N是訂閱這個頻道的Client數量，M是所有訂閱者的數量。\n\n#### Publish 指令的格式\n```shell\nPublish [channel] [message]\n```\n\n### Subscribe\n\n#### 官網的說明\n>Available since 2.0.0.\n>\n>**Time complexity**: O(N) where N is the number of channels to subscribe to.\n>\n>Subscribes the client to the specified channels.\n\nRedis最低版本：2.0\n這個指令主要的用途是訂閱頻道，用來接收訂閱頻道中的訊息。\n而時間複雜度是：O(N)，N是指要訂閱頻道的總數目\n\n#### Subscribe指令格式\n```shell\nSUBSCRIBE [channel 1] [channel 2] ...\n```\n\n### UnSubscribe\n\n#### 官網的說明\n>Available since 2.0.0.\n>\n>**Time complexity**: O(N) where N is the number of clients already subscribed to a channel.\n>\n>Unsubscribes the client from the given channels, or from all of them if none is given.\n\nRedis最低版本：2.0\n這個指令主要的用途是取消訂閱頻道。\n而時間複雜度是：O(N)，N是指要取消訂閱頻道的總數目\n\n#### UnSubscribe指令格式\n```shell\nUNSUBSCRIBE [channel 1] [channel 2] ...\n```\n\n## 系統開發\n\n### 存取Redis in C#：StackExchange.Redis\n這是一套存取Redis的一個套件，在稍候的程式開發中，都會使用到這個套件來存取Redis！\n\n```cs\nInstall-Package StackExchange.Redis\n```\n\n### Subscribe開發\n\n#### Step1. 連結Redis\n在使用Redis需要先建立connection，才能連結到Redis。再使用StackExchange.Redis 套件時需要先引入他的namespace。\n\n```cs\nusing StackExchange.Redis;\n```\n\n設定Redis連線可以參考[這篇文章](https://github.com/StackExchange/StackExchange.Redis/blob/master/Docs/Configuration.md#configuration-options)上面會有參數的說明，這邊沒有一一列舉相關的參數設定。\n\n```cs\nvar configurationOptions = new ConfigurationOptions\n{\n    AbortOnConnectFail = false,\n    Password = \"password\",\n    Ssl = false,\n    ConnectTimeout = 6000,\n    SyncTimeout = 6000\n};\nconfigurationOptions.EndPoints.Add(new DnsEndPoint(\"redis host\", port));\n// IP:\n// configurationOptions.EndPoints.Add(IP Address, port));\nConnectionMultiplexer redis = ConnectionMultiplexer.Connect(configurationOptions);\n```\n\n#### Step2. 訂閱頻道\n在StackExchange.Redis 取得連線後，開始開發訂閱頻道前要先取得Redis的Subcriber，才能發佈或是訂閱訊息\n\n```cs\nvar sub = redis.GetSubscriber();\n```\n\n在訂閱訊息前，先看一下StackExchange.Redis中Subscribe的說明\n第一個參數是頻道名稱，這邊可以直接使用字串來代表RedisChannel的型別，第二個是一個Action的委派型別，第三個是commandFlag，這個主要的用途是在描述指令該如何執行，這個參數可以省略。\n\n這裡做一個範例，我在這裡訂閱了一個Study4TW的頻道，然後指定了收到這個訊息要做哪些事情（寫在Do Something中）\n\n```cs\nsub.Subscribe(\"Study4TW\", (channel, message) =>\n {\n     // Do Something\n });\n```\n\n如此只要寫在系統loading時就可以訂閱到該頻道，這個只要做一次就可以了，不需要每次執行！\n\n#### Step3. 送出訊息！\n送出訊息的指令相當簡單，只要填上你是哪一個頻道，以及你要送出的訊息即可！在RedisChannel與RedisValue兩個型別都可以使用字串來傳遞即可。\n\n```cs\nvar sub = redis.GetSubscriber();\nsub.Publish(\"Study4TW\", message);\n```\n\n在搭配前面Step2的程式碼，在這樣簡單的範例就可以在應用程序間互相通訊了！就不再需要透過資料庫來做訊息通知了，也不用使用IF去判別這一個訊息要怎麼處理或是交給哪一個method處理，增加程式碼的可讀性！是否受用無窮阿？\n\n## 參考資料\n[Redis Pub/Sub](http://redis.io/topics/pubsub)\n\n[Publish - Redis](http://redis.io/commands/publish)\n\n[Subscribe - Redis](http://redis.io/commands/subscribe)\n\n[UnSubscribe - Redis](http://redis.io/commands/unsubscribe)\n\n[StackExchange.Redis GitHub](https://github.com/StackExchange/StackExchange.Redis)\n\n[StackExchange.Redis nuget](https://www.nuget.org/packages/StackExchange.Redis/)\n","allTags":{"git":1,"vue":1,"nuxt":1,"vite":1,"devops":8,"study4":2,"dotnetconf":2,"aws":5,"frontend":2,"next.js":4,"react":5,"i18n":1,"gatsby.js":1,"postgresql":1,"database":2,"dotnet":1,"prevision":6,"iot":2,"platformio":2,"arduino":2,"esp":1,"elk":3,"azure":4,"vulnerability":1,"ssl":2,"vmss":1,"cd":3,"selenium":2,"tdd":1,"jest":1,"layout":1,"ec2":1,"iac":1,"terraform":1,"ci":1,"jenkins":1,"ecs":1,"ansible":1,"redis":2,"protobuf":2,"serialize":2,"deserialize":2,"pub":1,"sub":1,"notify":1}},"__N_SSG":true}