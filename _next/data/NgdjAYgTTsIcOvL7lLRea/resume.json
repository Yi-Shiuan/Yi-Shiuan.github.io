{"pageProps":{"exps":[{"company":"鼎恒數位科技股份有限公司","english":"Mayo","title":"資深工程師","during":{"start":"2021-09-01T00:00:00.000Z","end":null},"content":"\n## Specification by example的導入\n\n公司有許多客製化的專案項目，這些客製化項目會由公司的顧問團隊跟客戶對接與需求訪談後帶回公司與PM團隊做規格確認，\nPM在依照顧問提供的需求撰寫規格書，開發團隊在按照PM提供的規格書撰寫程式，品質管理人員也依照規格書寫出測試案例測試。\n\n從顧問團隊交付給PM團隊，在由PM團隊交付給RD與QA，中間的轉介時常會有許多訊息遺失導致開發的項目與客戶真正所想要的不同，\n時常有開發完畢的客制需求交付給客戶後，因使用情境與開發的功能不符再回到RD團隊重新開發的情況，甚至開發出與客戶所需的系統完全不同。\n\n在團隊內部的RD, PM, QA因為需求認知不同，因此也有出現測試案例互相抵觸的情況，使得整個測試時程與開開發時程嚴重延宕，客訴與客戶解約的事情因此上演！\n有鑑於此在團隊先行採用簡易的SBE（Specification by example）的方式，由QA與RD互相討論規格撰寫相關的實際案例，最後與PM做好規格確認，\nRD開發時使用這些案例撰寫單元測試開發需求，待RD交付後QA針對些情境案例測試。使整個團隊對於需求有明確的共識與認知。減少開發週期與測試時間。\n\n## 知識傳遞與分享\n\n1. 前端架構優化與節費：公司系統在新開發客戶上線後，會有畫面載入緩慢甚至空白頁面的產生，導致公司犧牲該月份的費用作為賠償給客戶，\n因此調整了雲端架構並且採用CDN來降低伺服器瞬間吞吐量，減少客訴發生。調整雲端架構後也降低原先伺服器所需要的規格，降低雲端費用。\n\n1. 公司的三個產品線都會定期會委託外部做弱點掃描，當弱點掃描出現弱點時會有時間限制要做對應的處理，只要有前端的弱點產生都會有我參與討論解決方案\n"},{"company":"格萊鉑數位有限公司","english":"Glaibo Digital co., Ltd","title":"高級工程師","during":{"start":"2018-11-01T00:00:00.000Z","end":"2021-04-01T00:00:00.000Z"},"content":"\n## 規劃前端新官網架構\n\n在2020年中時商務團隊提出了官方網站的升級改版計畫，將原有的網站風格重新設計，由於當時的系統升級npm package具有許多難度以及ReactJS的版本與主流版本差異巨大的情況下，\n經過團隊討論後打算重新規劃與開發新的官網，在整個新官網的範疇中我負責了以下幾個項目\n\n- 調整使用GraphQL的使用方式，讓頁面所需的資料一次取回減少網頁渲染時間\n- 專案架構的設計讓Component以最大限度地在桌機版與手機版中重用。\n- 因現有的網站在每一個環境都必續重新建置一份，在新的網站中我做了一些改變使一次的建置可以部署在多個環境中。\n- 解決原有網站需要維護路由表的問提，在新官網中簡化了路由設計以及移除路由對應的邏輯使整個系統的邏輯變得更加清晰。\n- 現有的網站的金流中心是拆分在外的另一個站台只為了共用的金流邏輯，所以我提出了將金流中心的邏輯包裝成npm package，採用npm的方式引入在維護的品牌中\n- 採用了function component並使用React Hooks\n\n## 規劃AWS架構並搬遷IDC機房至AWS\n\n公司原本採用自建的IDC機房在多方的考量下要移轉到AWS上，在原先團隊的規劃中是載用大量的EC2 instance來搬遷現有的系統，\n使用這樣的搬遷方式花費的成本非常之巨，所以在搬遷的過程中針對了雲端的特性以及應用程式的環境做了一系列的變更為我們節省了近50%的費用：\n\n- OS作業系統變更，將除.net framework之外的Application轉換使用Linux系統並採用Container的方式部署\n- 全自動化的擴展與部署，在完全不需要人工介入並且於極短時間內完成系統的環境設定與AP部署，節省許多建置Image的容量支出\n- AWS的測試環境以及CI Agent在每天工作結束後會自動的關機銷毀，在隔天上班前在自動啟動，減少暈端費用的支出\n- 具有發行預覽的環境可以供上線前的檢查，也讓服務有了`暖身`可以提供線上即時的流量\n- 藍綠部署與金絲雀部署，我們的暈端規劃可以部署任一版本到任意環境中\n\n## 建立團隊CI/CD流程\n\n團隊一開始沒有一個可靠穩定的CI與CD流程，常因署腳本錯誤執行錯誤需要人工的大量介入或是部署版本混亂導致系統穩定性不佳，\n因此我在團隊中採用[dotnet cake](https://cakebuild.net/)來撰寫整個CI的腳本，並且規劃統一的git commit message使artifact有可靠的版本編號，\n也建立了Artifact Server，讓整個Artifact有了完善的管理機智與存放位置\n\n在CD的部分我採用了Ansible來作為團隊部署的腳本，改善過去部署失敗就需要人工介入的問題使部署的穩定度及可靠程度得到了最大的保障，\n另外也把整個部署的時間由15分鐘縮短至3分鐘。\n\n## 建立AWS Infrastructure as Code\n\n原先AWS的設定仰賴大量的人工與經驗設定，在建立環境時常常因為某一選項沒有設定而導致整個服務沒有如預期的執行，\n所以我們採用了`Terraform`，透過固定的腳本以及參數檔案來讓整個AWS的環境建置可以更有效率更精確地完成。在環境需要變更時只需要修改存放在gitlab\n的設定並且交由團隊review就可以完成AWS的環境變更。\n\n在AP的部分有重大個更新時我們會採用金絲雀部署的方式來進行系統測試，而金絲雀部署對於AWS的設定來說非常的麻煩，\n只要做錯就會導致整個系統會有不正常的行為發生，自從我們採用了IaC的另一個好處是`金絲雀部署`的繁瑣設定也能夠簡化並且快速修改，\n並且可以經過相關的測試環境後才做Production的變更\n\n## Log收集系統與分析工具\n\n在遷移雲端的同時我採用了ELK作為log收集分析工具，使用一台r5.large的機器在每秒1800筆的log水準下系統反應只需要不到2ms延遲時間，\n以及production的log自動留存4週測試環境的log自動留存兩週，在log查詢上不超過30秒的反應水準\n\n## 其他成果\n\n- 協助QA架設自動化測試的infra，並且連動Jenkins部署的Job自動觸發QA的Selenium測試\n- 在團隊導入新的技術Terraform, Ansible, dotnet core, redis, docker\n\n公司於2021年改名，原博裕科技\n"},{"company":"軒昂有限","english":"Xuenn Private Limited","title":"IT Consultant","during":{"start":"2015-10-1","end":"2018-09-1"},"content":"\n## 帶領5人小團隊完成北京賽車遊戲開發\n\n在軒昂的期間中我帶領了QA, DBA, Frontend以及Backend的團隊在4個月內開發完成新的數字彩遊戲`北京賽車`，\n在這個團隊的開發流程是採用敏捷的開發方式，我們在每次的Sprint開始前會有先審視整個backlog，\n並且會拿出一定數量的backlog來討論DoD以及羅列測試的項目並採用BDD的開發模式進行，\n在這個專案中我扮演了引導的角色以及團隊的輔佐使整個團隊在開發的過程擁有最大化的自主性。\n\n## In-Memory的高並發交易系統實作與調教\n\n如果使用資料庫來運算下注的注單風險以及賠率最佳化無法滿足市場對於該遊戲的投注預期（每秒鐘20K)，所以團隊嘗試採用了In-Memory的交易系統。\n在一開始這個交易系統能構乘載的交易量約2000~3000張/每秒，這個數量離市場的預期差距相當的巨大，因此我與TA團隊一起研究，\n在這個過程中嘗試了整個程式碼的改寫, 針對GC的行為做程式碼的改寫與調教, 使用struct的方式降低GC的回收次數, 優化計算流程，最終達到單點的交易投注量可達到2.8W 張/每秒的投注數量。\n\n## 其他成果\n\n- 重構舊有系統並導入單元測試，測試覆蓋率達60%\n- 參加DevOps計畫，參與System Configuration的組別並且對Ansible與Azure DevOps進行研究\n- 團隊的release flow規劃\n"},{"company":"向上遊戲","english":"XIANG SHANG GAMES","title":"實習生","during":{"start":"2014-02-1","end":"2014-09-1"},"content":"\n## 實作並且設計後台系統與培訓\n\n會進入向上遊戲主要是因為向上遊戲當時想採用ASP.NET MVC的框架來取代現有的ASP.NET，當時剛好也入選ASP.NET的微軟最有價值專家擅長於MVC框架，\n我的第一個專案就是使用MVC來規劃後台模組與後台的結構。\n\n因向上遊戲想導入MVC所以我在公司內部做了許多MVC培訓課程，讓整個部門可以更快的入手ASP.NET MVC框架。\n"},{"company":"國立台中科技大學-資訊管理系","title":"學士","during":{"start":"2010-09-01T00:00:00.000Z","end":"2014-09-01T00:00:00.000Z"},"content":"\n## 微軟最有價值專家 MVP\n\n在大學三年級的時候因為參加了微軟主辦的社群之星活動開啟了我對MVP的崇景，在整個大學三年級的期間我撰寫了許多關於ASP.NET MVC的相關文章\n以及在Study4.TW中分享我的開發經驗以及SSRS等等的技能分享，所以在大學四年級時獲得MVP的題名並且入選成為當年度最年輕的MVP。\n\n在大學四年級時仍持續的分享相關技術以及撰寫部落格文章獲得MVP的連任，因當兵無法繼續分享而中斷。\n\n## 微軟第一屆社群之星競賽第三名\n\n在大學三年級時獲得了這個比賽的內容，並且與朋友組隊一起參加這個長達三個月的線上線下的社群分享，最後獲得第三名的寶座。\n\n## 微軟第二屆社群之星教練\n\n隔年第二屆的社群之星已當選MVP，所以獲選成為教練並帶領學弟妹以及指導成員在比賽中遇到的困難以及技術上的支援。\n"}]},"__N_SSG":true}