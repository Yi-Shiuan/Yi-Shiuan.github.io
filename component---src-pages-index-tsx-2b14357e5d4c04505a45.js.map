{"version":3,"sources":["webpack://yi-shiuan-blogger/./src/component/article.tsx","webpack://yi-shiuan-blogger/./src/component/pagination.tsx","webpack://yi-shiuan-blogger/./src/pages/index.tsx"],"names":["props","className","classNames","date","to","path","title","description","G","image","getImage","alt","shortname","config","url","identifier","id","width","height","icon","faBookOpen","Pagination","totalPage","Math","ceil","totalCount","perPage","goToPage","targetPage","hasPreviousPage","currentPage","faAngleLeft","hasNextPage","faAngleRight","data","pageInfo","allMdx","my","edges","map","node","key","frontmatter","fields","tags"],"mappings":"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","file":"component---src-pages-index-tsx-2b14357e5d4c04505a45.js","sourcesContent":["import { faBookOpen } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\nimport { CommentCount } from \"disqus-react\";\nimport { Link} from \"gatsby\";\nimport { GatsbyImage,getImage } from \"gatsby-plugin-image\";\nimport PropTypes from 'prop-types'\nimport React from \"react\";\n\nconst Article: React.FunctionComponent<any> = (props: any) => {\n    return <article className={ \"g-mb-100\" }>\n        <div className={ \"g-mb-30\" }>\n            <span\n                className={ classNames(\"d-block\", \"g-color-gray-dark-v4\", \"g-font-weight-700\", \"g-font-size-12\", \"text-uppercase\", \"mb-2\") }>\n                { props.date }\n            </span>\n            <h2 className={ classNames(\"h4\", \"g-color-black\", \"g-front-weight-600\", \"mb-3\") }>\n                <Link className={ classNames(\"u-link-v5\", \"g-color-black\", \"g-color-purple--hover\") }\n                      to={ `/posts${ props.path }` }>\n                    { props.title }\n                </Link>\n            </h2>\n            <p className={ classNames(\"g-color-gray-dark-v4\", \"g-line-height-18\") }>\n                { props.description }\n            </p>\n        </div>\n\n        <ul className={ classNames(\"list-inline\", \"g-brd-y\", \"g-brd-gray-light-v3\", \"g-font-size-13\", \"g-py-13\", \"mb-0\", 'd-flex', 'justify-content-between', 'align-items-center') }>\n            <li className={ classNames(\"list-inline-item\", \"g-color-gray-dark-v4\", 'g-hidden-sm-down') }>\n                  <span className={ classNames(\"d-line-block\",\n                                               \"g-color-gray-dark-v4\",\n                                               \"g-px-15\",\n                                               \"g-py-5\") }>\n                      <GatsbyImage className={ classNames(\"g-width-20\",\n                                                  \"g-height-20\",\n                                                  \"rounded-circle\",\n                                                  \"g-mr-2\") }\n                           image={ getImage(props.image) } alt=\"Bruno Jan\"/>\n                      Bruno Jan\n                  </span>\n            </li>\n            <li className={ classNames(\"list-inline-item\", \"g-color-gray-dark-v4\", \"float-right\") }>\n                <span className={ classNames(\"d-inline-block\",\n                                             \"g-color-gray-dark-v4\",\n                                             \"g-px-15\",\n                                             \"g-py-5\") }>\n                    <CommentCount\n                        shortname={ \"yi-shiuan\" }\n                        config={\n                            {\n                                url: `https://yi-shiuan.github.io${ props.path }`,\n                                identifier: props.id,\n                                title: props.title,\n                            }\n                        }>\n                    Comments\n                </CommentCount>\n                </span>\n                <Link className={ classNames(\"d-inline-block\",\n                                             \"g-color-gray-dark-v4\",\n                                             \"g-color-white--hover\",\n                                             \"g-bg-purple--hover\",\n                                             \"rounded\",\n                                             \"g-transition-0_3\",\n                                             \"g-text-underline--none--hover\",\n                                             \"g-px-15\",\n                                             \"g-py-5\") }\n                      to={ `/posts${ props.path }` }>\n                    <FontAwesomeIcon width={ 15.75 }\n                                     height={ 12.25 }\n                                     className={ classNames(\"align-middle\", \"g-font-size-default\", \"g-mr-2\") }\n                                     icon={ faBookOpen }/>\n                    Read more\n                </Link>\n\n            </li>\n\n\n        </ul>\n    </article>\n}\n\nArticle.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    date: PropTypes.string,\n    path: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    image: PropTypes.any\n}\n\nexport default Article;\n","import { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from 'classnames';\nimport { Link } from \"gatsby\";\nimport React, { FunctionComponent } from 'react';\n\nexport type PaginationProps = {\n    hasPreviousPage: boolean\n    hasNextPage: boolean\n    currentPage: number;\n    totalCount: number;\n    perPage: number\n}\n\nexport const Pagination: FunctionComponent<PaginationProps> = (props: PaginationProps): any => {\n    const totalPage: number = Math.ceil(props.totalCount / props.perPage);\n\n    const goToPage: any = (targetPage: number): any => {\n        if ( targetPage === 1 ) {\n            return \"/\"\n        }\n\n        return `/page/${ targetPage }`;\n    }\n\n\n    return <nav className={ 'text-center' }>\n        <ul className={ 'list-inline' }>\n            <li className={ classNames('list-inline-item', 'float-sm-start') }>\n                {\n                    props.hasPreviousPage ?\n                    <Link className={ classNames('u-pagination-v1__item',\n                                                 'g-brd-around',\n                                                 'g-color-purple',\n                                                 'g-brd-gray-light-v3',\n                                                 'g-bg-purple--hover',\n                                                 'g-brd-purple--hover',\n                                                 'g-color-white--hover',\n                                                 'g-rounded-50',\n                                                 'g-pa-7-16') }\n                          to={ goToPage(props.currentPage - 1) }>\n                        <span aria-hidden=\"true\">\n                            <FontAwesomeIcon className={ 'mr2' } icon={ faAngleLeft }/>\n                            Previous\n                        </span>\n                    </Link> : \"\"\n                }\n            </li>\n            <li className={ classNames('list-inline-item', 'font-italic') }>\n                <a className={ classNames('g-color-purple', 'g-pa-7-16') }>{ props.currentPage } of { totalPage }</a>\n            </li>\n            <li className={ classNames('list-inline-item', 'float-sm-end') }>\n                {\n                    props.hasNextPage ? <Link className={ classNames(\n                        'u-pagination-v1__item',\n                        'g-brd-around',\n                        'g-color-purple',\n                        'g-brd-gray-light-v3',\n                        'g-bg-purple--hover',\n                        'g-color-white--hover',\n                        'g-rounded-50',\n                        'g-pa-7-16') }\n                                              to={ goToPage(props.currentPage + 1) }>\n                    <span aria-hidden=\"true\">\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t<FontAwesomeIcon className={ 'ml2' } icon={ faAngleRight }/>\n                        </span>\n                    </Link> : \"\"\n                }\n\n\n            </li>\n        </ul>\n    </nav>\n};\n","import { graphql } from \"gatsby\";\nimport PropTypes from 'prop-types'\nimport React from \"react\"\nimport Article from \"../component/article\";\nimport Layout from \"../component/layout\";\nimport { Pagination } from \"../component/pagination\";\n\nconst Index = (props: any) => {\n    const {\n        allMdx: { pageInfo },\n        my\n    } = props.data;\n\n    return <Layout title={''}>\n        <div className={ 'g-pl-20--lg' }>\n            {\n                props.data.allMdx.edges.map(({ node }: any) => {\n                    return <Article\n                        key={ node.id }\n                        id={ node.id }\n                        title={ node.frontmatter.title }\n                        date={ node.frontmatter.date }\n                        description={ node.frontmatter.description }\n                        path={ node.fields.path }\n                        tags={ node.frontmatter.tags }\n                        image={ my }/>\n                })\n            }\n        </div>\n\n        <Pagination { ...pageInfo }  />\n    </Layout>\n}\n\nIndex.propTypes = {\n    data: PropTypes.object.isRequired,\n    pageContext: PropTypes.shape({\n                                     nextPagePath: PropTypes.string,\n                                     previousPagePath: PropTypes.string,\n                                 }),\n}\n\nexport const postsQuery = graphql`\n    query($limit: Int! = 10, $skip: Int! = 0) {\n        my: imageSharp(fluid: {originalName: {eq: \"myimage.jpg\"}}) {\n            gatsbyImageData(width: 20)\n        }\n        allMdx(\n            filter: {fileAbsolutePath: {regex: \"//posts//\"}, internal: {type: {eq: \"Mdx\"}}, frontmatter: {published: {eq: true}}},\n            sort: {fields: frontmatter___date, order: DESC},\n            skip: $skip,\n            limit: $limit\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        date(formatString: \"DD MMM YYYY\")\n                    }\n                    fields {\n                        path\n                    }\n                }\n            }\n            pageInfo {\n                currentPage\n                totalCount\n                perPage\n                hasPreviousPage\n                hasNextPage\n            }\n        }\n    }\n`\n\nexport default Index;\n"],"sourceRoot":""}