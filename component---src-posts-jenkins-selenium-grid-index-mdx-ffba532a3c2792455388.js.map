{"version":3,"sources":["webpack:///./src/posts/jenkins-selenium-grid/index.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"gOAKaA,EAAe,CAC1B,MAAS,kCACT,YAAe,6NACf,KAAQ,CAAC,KAAM,YACf,KAAQ,2BACR,WAAa,GAQTC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,2DACA,gCACA,mEACA,sEACE,2BAAgB,CACd,WAAc,KADhB,UADF,8KAOA,4DACE,2BAAgB,CACd,WAAc,KADhB,UADF,uEAMA,gCAEE,kBAAO,CACL,WAAc,cADhB,6DAKA,kBAAO,CACL,WAAc,cADhB,mEAKF,gCACA,mFACA,wBACA,gCACA,uBAAG,kBAAO,CACN,KAAQ,yFACR,WAAc,KAFf,wBAOPH,EAAWI,gBAAiB,G,kCClEb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-posts-jenkins-selenium-grid-index-mdx-ffba532a3c2792455388.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"透過Jenkins啟動Selenium Grid執行自動化測試\",\n  \"description\": \"QA測試當然不是只測試RD這次上線的範圍而已，而是把過去上線的功能都要在驗過一遍才能算是經過QA測試的版本，但是隨著時間的積累線上的系統越來越多 有時候QA無法透過手動的方式完成所有驗證，這時候都會導入自動畫測試selenium來協助QA做完系統的驗證，在目前我服務的公司把CD與自動化測試的部分做了整合， 當QAT部署完成後就會驅動QA的自動化驗證，但是當自動化驗證的Job越來越多一台機器已經很難在3-5分鐘內完成自動化測試怎麼辦？\",\n  \"tags\": [\"ci\", \"selenium\"],\n  \"date\": \"2020-09-05T16:00:00.000Z\",\n  \"published\": false\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`透過Jenkins啟動Selenium Grid執行自動化測試`}</h1>\n    <h2>{`寫在前面`}</h2>\n    <p>{`一般我們上限流程都含有QA的測試階段，QA的測試與RD的開發有著很大的區別...`}</p>\n    <p>{`QA測試當然不是只測試RD這次上線的範圍而已，而是把過去上線的功能都要在驗過一遍才能算是`}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`經過QA測試`}</inlineCode>\n      {`的版本，但是隨著時間的積累線上的系統越來越多\n有時候QA無法透過手動的方式完成所有驗證，這時候都會導入自動畫測試selenium來協助QA做完系統的驗證，在目前我服務的公司把CD與自動化測試的部分做了整合，\n當QAT部署完成後就會驅動QA的自動化驗證，但是當自動化驗證的Job越來越多一台機器已經很難在3-5分鐘內完成自動化測試怎麼辦？`}</p>\n    <p>{`在網路上很多採用Selenium Grid的人，大多都是有一個需求是`}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`多瀏覽器測試`}</inlineCode>\n      {`，目前我們只針對chrome做測試但他也能在多台機器上為我們完成許多\n自動化測試的需求，我們則是因為許多小而美的自動化測試需要被完成`}</p>\n    <blockquote>\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`在做自動化測試的時候，我的建議是每一次只驗證一項功能是否如我們預期的運作，然後把每個工作都拆分成小的Task來完成`}</p>\n\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`好處是可以透過Selenium Grid同時執行驗證減少時間成本，另外也可以避免某一個功能驗證失效，而導致後面的功能無法驗證`}</p>\n\n    </blockquote>\n    <h2>{`架構說明`}</h2>\n    <p>{`Jenkins我是採用Master跟Agent的方式建制的，Selenium 也適用Hub跟Node的方式建置的`}</p>\n    <p />\n    <h2>{`參考資料`}</h2>\n    <p><a {...{\n        \"href\": \"https://wizardforcel.gitbooks.io/selenium-doc/content/official-site/selenium-grid.html\",\n        \"parentName\": \"p\"\n      }}>{`Selenium Grid 中文文黨`}</a></p>\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}