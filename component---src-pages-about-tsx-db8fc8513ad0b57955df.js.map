{"version":3,"sources":["webpack:///./src/component/about/introduction.tsx","webpack:///./node_modules/rxjs/_esm5/internal/observable/interval.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isNumeric.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/take.js","webpack:///./src/component/about/experience.tsx","webpack:///./src/pages/about.tsx"],"names":["Introduction","React","memo","data","useStaticQuery","allConfigYaml","edges","node","className","classNames","style","links","map","item","key","title","href","url","target","width","height","icon","prefix","iconName","job_title","about","interval","period","scheduler","val","isArray","parseFloat","schedule","Observable","subscriber","add","dispatch","counter","state","next","this","ArgumentOutOfRangeError","ArgumentOutOfRangeErrorImpl","Error","call","message","name","prototype","Object","create","TakeOperator","total","source","subscribe","_super","TakeSubscriber","destination","_this","count","_next","value","complete","unsubscribe","Subscriber","Experience","useState","exps","setExps","exp","company","workContent","during","useEffect","pipe","length","empty","lift","slice","card","border0","gMb40","cardHeader","dFlex","alignItemsCenter","justifyContentBetween","gBgGrayLightV5","gMb15","h6","mb0","faBriefcase","gPosRel","gTop1","gMr5","uInfoV11","gBgWhiteGradientV1After","gHeight500","gPa0","cScrollbar","gPb40","row","uTimelineV2Wrap","listUnstyled","index","colMd12","gBrdBottom","gBrd0Md","gBrdGrayLightV4","gPb30","gPb0Md","gMb30","gMb0Md","animateAnimated","animateFadeInDown","colMd3","gPy15","textMdRight","gPr40Md","gMb20","h5","gFontWeight300","colMd9","alignSelfCenter","gOrientationLeft","gPl40Md","gBrdDarkblueLeft","gBrd5","gHiddenSmDown","uTimelineV2Icon","gTop35","dBlock","gWidth18","gHeight18","gBgPurple","gBrdAround","gBrd4","roundedCircle","gPa10Md","h4","i","About","props","gPa20","colLg4","gMb0Lg","gPy30Lg","imgFluid","w100","fluid","imageSharp","fadeIn","alt","colLg8","colLg12"],"mappings":"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","file":"component---src-pages-about-tsx-db8fc8513ad0b57955df.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport * as style from \"../../assets/scss/index.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {graphql, useStaticQuery} from \"gatsby\";\n\nexport const Introduction: React.FunctionComponent = React.memo(() => {\n    const {allConfigYaml:{edges: [{node: data}]} }: any = useStaticQuery(graphql`\n        query about {\n            allConfigYaml {\n                edges {\n                    node {\n                        about\n                        job_title\n                        links {\n                            icon {\n                                iconName\n                                prefix\n                            }\n                            title\n                            url\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    return <>\n        <div className={classNames(style.dFlex, style.alignItemsCenter, style.justifyContentSmBetween, style.gMb5)}>\n            <h2 className={classNames(style.gFontWeight300, style.gMr10)}>Bruno Jan</h2>\n            <ul className={classNames(style.listInline, style.mb0)}>\n                {\n                    data.links.map((item: any) =>{\n                        return <li className={classNames(style.listInlineItem, style.gMx2)} key={item.title}>\n                            <a className={classNames(style.uIconV1,\n                                style.uIconSizeSm,\n                                style.uIconSlideUpHover,\n                                style.gColorGrayLightV1,\n                                style.gBgGrayLightV5,\n                                style.gColorGrayLightV1Hover,\n                                style.roundedCircle)}\n                               href={item.url}\n                               target={\"_blank\"}>\n                                <i className={classNames(style.gFontSizeDefault, style.gLineHeight1, style.uIconElemRegular)}>\n                                    <FontAwesomeIcon width={8} height={14}\n                                                     icon={item.icon}/>\n                                </i>\n                                <i className={classNames(style.gFontSizeDefault, style.gLineHeight1, style.uIconElemHover)}>\n                                    <FontAwesomeIcon width={8} height={14}\n                                                     icon={item.icon}/>\n                                </i>\n                            </a>\n                        </li>\n                    })\n                }\n            </ul>\n        </div>\n        <h6 className={classNames(style.h6, style.gFontWeight300, style.gMb10)}>\n            <i className={classNames(style.gPosRel, style.gTop1, style.gMr5, style.gColorGrayDarkV5)}>\n                <FontAwesomeIcon width={10.5} height={14} icon={{prefix: \"fas\", iconName: 'award'}}/>\n            </i>\n            {data.job_title}\n        </h6>\n        <hr className={classNames(style.gBrdGrayLightV4, style.gMy20)}/>\n        <p className={classNames(style.lead, style.gLineHeight18)}>\n            {data.about}\n        </p>\n        <hr className={classNames(style.gBrdGrayLightV4, style.gMy20)}/>\n    </>;\n});\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period, scheduler) {\n  if (period === void 0) {\n    period = 0;\n  }\n\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable(function (subscriber) {\n    subscriber.add(scheduler.schedule(dispatch, period, {\n      subscriber: subscriber,\n      counter: 0,\n      period: period\n    }));\n    return subscriber;\n  });\n}\n\nfunction dispatch(state) {\n  var subscriber = state.subscriber,\n      counter = state.counter,\n      period = state.period;\n  subscriber.next(counter);\n  this.schedule({\n    subscriber: subscriber,\n    counter: counter + 1,\n    period: period\n  }, period);\n}","/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n  return !isArray(val) && val - parseFloat(val) + 1 >= 0;\n}","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ArgumentOutOfRangeErrorImpl = /*@__PURE__*/function () {\n  function ArgumentOutOfRangeErrorImpl() {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/Object.create(Error.prototype);\n  return ArgumentOutOfRangeErrorImpl;\n}();\n\nexport var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n  return function (source) {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nvar TakeOperator = /*@__PURE__*/function () {\n  function TakeOperator(total) {\n    this.total = total;\n\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError();\n    }\n  }\n\n  TakeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  };\n\n  return TakeOperator;\n}();\n\nvar TakeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeSubscriber, _super);\n\n  function TakeSubscriber(destination, total) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.total = total;\n    _this.count = 0;\n    return _this;\n  }\n\n  TakeSubscriber.prototype._next = function (value) {\n    var total = this.total;\n    var count = ++this.count;\n\n    if (count <= total) {\n      this.destination.next(value);\n\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  };\n\n  return TakeSubscriber;\n}(Subscriber);","import React from \"react\";\nimport classNames from \"classnames\";\nimport style from \"../../assets/scss/index.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBriefcase} from \"@fortawesome/free-solid-svg-icons\";\nimport {interval} from \"rxjs\";\nimport {take} from \"rxjs/operators\";\n\ntype Experiences = {\n    company: string;\n    title: string;\n    workContent: string[];\n    during: string\n}\n\nexport const Experience: React.FunctionComponent = () => {\n    const [exps, setExps] = React.useState<Experiences[]>([]);\n    const exp: Experiences[] = [\n            {\n                company: \"博裕科技 Growth Machine\",\n                title: \"高級工程師\",\n                workContent: [\n                    \"Full Stack Developer\",\n                    \"負責前端網站開發以及維護\",\n                    \"建立團隊CI/CD Flow\",\n                    \"導入IaC與AWS的維運\",\n                    \"導入Docker的部署模式\",\n                    \"開發後端遊戲架構與第三方系統串接\"\n                ],\n                during: \"2018.11 - Present\"\n            },\n            {\n                company: \"軒昂有限 Xuenn Private Limited\",\n                title: \"IT Consultant\",\n                workContent: [\n                    \"Backend Developer\",\n                    \"遊戲系統開發以及維護\",\n                    \"開發InMemory Transaction, 讓遊戲網站可乘載每秒超過3萬張訂單\"\n                ],\n                during: \"2015.10 - 2018.09\"\n            },\n            {\n                company: \"台中科技大學\",\n                title: \"資訊管理學系\",\n                workContent: [\"學士\"],\n                during: \"2010.09 - 2014.09\"\n            }\n        ];\n\n    React.useEffect(() =>{\n        interval(500).pipe(take(exp.length)).subscribe((item: number) => {\n            setExps(exp.slice(0, item + 1));\n        });\n    }, [])\n\n    return <div className={classNames(style.card, style.border0, style.gMb40)}>\n        <div\n            className={classNames(style.cardHeader, style.dFlex, style.alignItemsCenter, style.justifyContentBetween, style.gBgGrayLightV5, style.border0, style.gMb15)}>\n            <h6 className={classNames(style.h6, style.mb0)}>\n                <FontAwesomeIcon width={14} icon={faBriefcase} className={classNames(style.gPosRel, style.gTop1, style.gMr5)}/>\n                Experience\n            </h6>\n        </div>\n        <div className={classNames(style.uInfoV11, style.gBgWhiteGradientV1After, style.gHeight500, style.gPa0)}>\n            <div className={classNames(style.cScrollbar, style.gPb40)}>\n                <ul className={classNames(style.row, style.uTimelineV2Wrap, style.listUnstyled)}>\n                    {\n                        exps.map((item: Experiences, index: number) => {\n                            return <li className={classNames(style.colMd12,\n                                style.gBrdBottom,\n                                style.gBrd0Md,\n                                style.gBrdGrayLightV4,\n                                style.gPb30,\n                                style.gPb0Md,\n                                style.gMb30,\n                                style.gMb0Md,\n                                style.animateAnimated,\n                                style.animateFadeInDown)} key={index}>\n                                <div className={classNames(style.row)}>\n                                    <div\n                                        className={classNames(style.colMd3, style.gPy15, style.textMdRight, style.gPr40Md, style.gMb20, style.gMb0Md)}>\n                                        <h5 className={classNames(style.h5, style.gFontWeight300)}>{item.title}</h5>\n                                        <h6 className={classNames(style.h6, style.gFontWeight300, style.mb0)}>{item.during}</h6>\n                                    </div>\n                                    <div className={classNames(style.colMd9,\n                                        style.alignSelfCenter,\n                                        style.gOrientationLeft,\n                                        style.gPl40Md,\n                                        style.gBrdDarkblueLeft,\n                                        style.gBrd5)}>\n                                        <div\n                                            className={classNames(style.gHiddenSmDown, style.uTimelineV2Icon, style.gTop35)}>\n                                            <i className={classNames(style.dBlock,\n                                                style.gWidth18,\n                                                style.gHeight18,\n                                                style.gBgPurple,\n                                                style.gBrdAround,\n                                                style.gBrd4,\n                                                style.gBrdGrayLightV4,\n                                                style.roundedCircle)}/>\n                                        </div>\n                                        <article className={classNames(style.gPa10Md)}>\n                                            <h4 className={classNames(style.h4, style.gFontWeight300)}>{item.company}</h4>\n                                            {\n                                                item.workContent.map((i: string) => {\n                                                    return <p className={style.mb0} key={i}>\n                                                        {i}\n                                                    </p>\n                                                })\n                                            }\n                                        </article>\n                                    </div>\n                                </div>\n                            </li>\n                        })\n                    }\n                </ul>\n            </div>\n\n        </div>\n    </div>\n};\n","import React from \"react\"\nimport style from \"../assets/scss/index.module.scss\";\nimport Layout from \"../component/layout\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport classNames from \"classnames\";\nimport Img from \"gatsby-image\"\nimport {Introduction} from \"../component/about/introduction\";\nimport {Experience} from \"../component/about/experience\";\n\nconst About = (props: any) => {\n    return <Layout title={\"關於我\"}>\n        <div className={classNames(style.gBrdAround, style.gBrdGrayLightV4, style.gPa20, style.gMb40)}>\n            <div className={style.row}>\n                <div className={classNames(style.colLg4, style.gMb40, style.gMb0Lg)}>\n                    <div className={style.gPy30Lg}>\n                        <Img\n                            className={classNames(style.imgFluid, style.w100)}\n                            fluid={props.data.imageSharp.fluid}\n                            fadeIn={true}\n                            alt=\"Bruno Jan\"/>\n                    </div>\n                </div>\n                <div className={style.colLg8}>\n                    <Introduction/>\n                </div>\n            </div>\n        </div>\n        <div className={style.colLg12}>\n            <Experience />\n        </div>\n    </Layout>\n}\n\nexport const pageQuery = graphql`\n    query {\n        imageSharp(fluid: {originalName: {eq: \"myimage.jpg\"}}) {\n            fluid(maxWidth: 400) {\n                ...GatsbyImageSharpFluid\n            }\n        }\n    }\n`\n\nexport default About;"],"sourceRoot":""}