(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{GgqA:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return i}));var a=n("zLVn"),s=(n("q1tI"),n("7ljp")),r={title:"Redis Data Types 介紹",description:"Redis在4.0之前其實只有5個資料型態，不過到了現在新的版本多了一些不同的形態如stream, geo等等，不過本篇只會針對原有的string, sort set, hash set, set, list這五個形態來做說明。",tags:["redis"],date:"2020-08-19T16:00:00.000Z",published:!0},l={_frontmatter:r};function i(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.mdx)("wrapper",Object.assign({},l,n,{components:t,mdxType:"MDXLayout"}),Object(s.mdx)("h1",null,"Redis DataType 介紹"),Object(s.mdx)("h2",null,"前言"),Object(s.mdx)("p",null,"這篇文章其實是以前在整理Redis的文件時所做的一些資料，再拿出來寫是因為現在同事剛好也需要這樣的資訊。"),Object(s.mdx)("p",null,"Redis在4.0之前其實只有5個資料型態，不過到了現在新的版本多了一些不同的形態如stream, geo等等，不過本篇只會針對原有的string, sort set,\nhash set, set, list這五個形態來做說明。"),Object(s.mdx)("h3",null,"String 型別"),Object(s.mdx)("p",null,"String 型態可以存放 binary, string, integer, float資料，在官網的說明是最基礎的型態，單一個Key可以存放月512MB的資料。"),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Strings are the most basic kind of Redis value. Redis Strings are binary safe,\nthis means that a Redis string can contain any kind of data, for instance a JPEG image or a serialized Ruby object."),Object(s.mdx)("p",{parentName:"blockquote"},Object(s.mdx)("a",{href:"https://redis.io/topics/data-types",parentName:"p"},"redis 官方網站"))),Object(s.mdx)("h4",null,"String 使用的幾個場景介紹"),Object(s.mdx)("ol",null,Object(s.mdx)("li",{parentName:"ol"},"圖片快取 （使用binary）"),Object(s.mdx)("li",{parentName:"ol"},"Configuration"),Object(s.mdx)("li",{parentName:"ol"},"累計次數、觀看累計次數")),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"不過根據我的使用經驗來說，資料量在1Kb內擁有較好的網路傳輸，當今天你存放的string資料大於1kb，我建議轉換成binary資料，透過Gzip做壓縮\n才存放到Redis中才會有較好的快取效果")),Object(s.mdx)("h3",null,"HashSet"),Object(s.mdx)("p",null,"Hash set是用來存放一組相同性質的資料，這些資料HashSet(or Dictionary)或是物件的某一屬性，與String較為不同的是他可以取回單一個欄位資料\n但String必須取回所有資料（若透過Redis module可以取得Json特定的資料），單一個Key可以存放2",Object(s.mdx)("sup",null,"32")," - 1的資料欄位，"),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Redis Hashes are maps between string fields and string values, so they are the perfect data type to represent objects\n(e.g. A User with a number of fields like name, surname, age, and so forth):"),Object(s.mdx)("p",{parentName:"blockquote"},Object(s.mdx)("a",{href:"https://redis.io/topics/data-types",parentName:"p"},"redis 官方網站"))),Object(s.mdx)("h4",null,"Hashes的使用場景"),Object(s.mdx)("ol",null,Object(s.mdx)("li",{parentName:"ol"},"每次只需要取用一部分的資料"),Object(s.mdx)("li",{parentName:"ol"},"C#的Dictionary或HashSet資料型態")),Object(s.mdx)("h3",null,"List"),Object(s.mdx)("p",null,"List 資料型態可以想像成程式語言中的Array物件或是你可以把它時作成Queue或是Stack的物件。List 單一個Key可以存放2",Object(s.mdx)("sup",null,"32")," - 1"),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Redis Lists are simply lists of strings, sorted by insertion order.\nIt is possible to add elements to a Redis List pushing new elements on the head (on the left) or on the tail (on the right) of the list."),Object(s.mdx)("p",{parentName:"blockquote"},Object(s.mdx)("a",{href:"https://redis.io/topics/data-types",parentName:"p"},"redis 官方網站"))),Object(s.mdx)("h4",null,"List的使用場景"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},"List 物件"),Object(s.mdx)("li",{parentName:"ul"},"無序資料"),Object(s.mdx)("li",{parentName:"ul"},"Queue 物件"),Object(s.mdx)("li",{parentName:"ul"},"Stack 物件"),Object(s.mdx)("li",{parentName:"ul"},"Array 物件")),Object(s.mdx)("h3",null,"Set"),Object(s.mdx)("p",null,"類似於List的資料格式但不能存入相同的資料，所以內容是不能重複的預設也不會幫你排序，Sets 單一個Key可以存放2",Object(s.mdx)("sup",null,"32")," - 1"),Object(s.mdx)("h4",null,"Set的使用場景"),Object(s.mdx)("ol",null,Object(s.mdx)("li",{parentName:"ol"},"文章中的Tag標籤"),Object(s.mdx)("li",{parentName:"ol"},"用來排除相同資料")),Object(s.mdx)("h3",null,"Sorted Set"),Object(s.mdx)("p",null,"Sorted Set從名字就可以知道他是一個",Object(s.mdx)("strong",{parentName:"p"},"經過"),"排序的Set所以當你每次有資料異動時都會自動的為你重新排序採用的是快速排序的演算法，\n這個資料結構可以說是Redis操作的時候成本最高的一個結構吧！通常的時間成本是",Object(s.mdx)("strong",{parentName:"p"},"O(log(N))"),"N為Key所存放的資料總量，另外他跟Set很相似內容是不能重複的"),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Redis Sorted Sets are, similarly to Redis Sets, non repeating collections of Strings.\nThe difference is that every member of a Sorted Set is associated with score,\nthat is used in order to take the sorted set ordered, from the smallest to the greatest score.\nWhile members are unique, scores may be repeated."),Object(s.mdx)("p",{parentName:"blockquote"},Object(s.mdx)("a",{href:"https://redis.io/topics/data-types",parentName:"p"},"redis 官方網站"))),Object(s.mdx)("h4",null,"Sorted Set的使用場景"),Object(s.mdx)("p",null,"其實也沒什麼好說的，需要有序的資料用他準沒錯"),Object(s.mdx)("h3",null,"其他"),Object(s.mdx)("p",null,"其他資料還有Bitmaps, HyperLogLogs, geo, stream等等，目前我也沒有實際使用過，所以就不在此介紹了"),Object(s.mdx)("h3",null,"參考連結"),Object(s.mdx)("p",null,Object(s.mdx)("a",{href:"https://redis.io/topics/data-types",parentName:"p"},"Redis Data Types")))}i.isMDXComponent=!0},zLVn:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}n.d(t,"a",(function(){return a}))}}]);
//# sourceMappingURL=component---src-posts-redis-data-types-redis-data-types-mdx-0a71799dd82de7e45c94.js.map