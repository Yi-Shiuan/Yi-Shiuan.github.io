{"version":3,"sources":["webpack://yi-shiuan-blogger/./src/component/IconLink.tsx","webpack://yi-shiuan-blogger/./src/component/resume/profile.tsx","webpack://yi-shiuan-blogger/./src/pages/about.tsx"],"names":["IconLink","props","icon","url","className","classNames","href","target","width","height","name","links","job_title","birthday","email","education","about","map","item","key","title","prefix","iconName","data","profile","configYaml","image","my","G","getImage","alt"],"mappings":"qMAUaA,EAA6C,SAACC,GACvD,IACIC,EAEKD,EAFLC,KACAC,EACKF,EADLE,IAEJ,OAAO,sBAAIC,UAAYC,IAAW,mBAAoB,WAElD,qBAAGD,UAAYC,IAAW,YACA,kBACA,yBACA,wBACA,qBACA,+BACA,kBACvBC,KAAOH,EACPI,OAAS,UACR,qBAAGH,UAAYC,IAAW,sBAAuB,kBAAmB,yBAChE,gBAAC,IAAD,CAAiBG,MAAQ,EAAIC,OAAS,GACrBP,KAAOA,KAE5B,qBAAGE,UAAYC,IAAW,sBAAuB,kBAAmB,uBAChE,gBAAC,IAAD,CAAiBG,MAAQ,EAAIC,OAAS,GACrBP,KAAOA,QC0DxC,EA3E6D,SAACD,GAC1D,IACIS,EAOAT,EAPAS,KACAC,EAMAV,EANAU,MACAC,EAKAX,EALAW,UACAC,EAIAZ,EAJAY,SACAC,EAGAb,EAHAa,MACAC,EAEAd,EAFAc,UACAC,EACAf,EADAe,MAGJ,OAAO,gCACH,uBAAKZ,UAAYC,IAAW,YAAa,qBAAsB,0BAA2B,WACtF,sBAAID,UAAYC,IAAW,oBAAqB,YAAeK,GAC/D,sBAAIN,UAAYC,IAAW,cAAe,SAElCM,EAAMM,KAAI,SAACC,GACP,OAAO,gBAAClB,EAAD,eAAUmB,IAAMD,EAAKE,OAAaF,SAKzD,sBAAId,UAAYC,IAAW,KAAM,oBAAqB,YAClD,qBAAGD,UAAYC,IAAW,YAAa,UAAW,SAAU,yBACxD,gBAAC,IAAD,CAAiBG,MAAQ,KAAOC,OAAS,GACxBP,KAAO,CACHmB,OAAQ,MACRC,SAAU,YAGjCV,GAEN,sBAAIR,UAAYC,IAAW,cAAe,sBAElCQ,GAAY,sBAAIT,UAAYC,IAAW,mBAAoB,YACvD,qBAAGD,UAAYC,IAAY,YAAa,UAAW,SAAU,yBACzD,gBAAC,IAAD,CAAiBG,MAAQ,KAAOC,OAAS,GACxBP,KAAO,CACHmB,OAAQ,MACRC,SAAU,oBAGjCT,GAINC,GAAS,sBAAIV,UAAYC,IAAW,mBAAoB,YACpD,qBAAGD,UAAYC,IAAW,YAAa,UAAW,SAAU,yBACxD,gBAAC,IAAD,CAAiBG,MAAQ,KAAOC,OAAS,GACxBP,KAAO,CACHmB,OAAQ,MACRC,SAAU,SAGjCR,GAGRC,GAAa,sBAAIX,UAAYC,IAAW,mBAAoB,YAC1D,qBAAGD,UAAYC,IAAW,YAAa,UAAW,SAAU,yBACxD,gBAAC,IAAD,CAAiBG,MAAQ,KAAOC,OAAS,GACxBP,KAAO,CACHmB,OAAQ,MACRC,SAAU,qBAGjCP,IAGV,sBAAIX,UAAYC,IAAW,sBAAuB,aAClD,qBAAGD,UAAYC,IAAW,OAAQ,qBAC5BW,M,wGC/Bd,UA/Cc,SAACf,GACX,MAGSA,EAAMsB,KAFCC,EADhB,EACIC,WACIC,EAFR,EAEIC,GAGJ,OAAO,gBAAC,IAAD,CAAQP,MAAQ,OACnB,uBAAKhB,UAAYC,IAAW,eAAgB,sBAAuB,UAAW,YAC1E,uBAAKD,UAAY,OACb,uBAAKA,UAAYC,IAAW,WAAY,UAAW,eAC/C,uBAAKD,UAAY,eACb,gBAAC,EAAAwB,EAAD,CACIxB,UAAYC,IAAW,YAAa,SACpCqB,OAAQG,OAASH,GACjBI,IAAI,gBAGhB,uBAAK1B,UAAY,YACb,gBAAC,IAAmBoB","file":"component---src-pages-about-tsx-dae6ee43045be364925f.js","sourcesContent":["import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\n\nexport type IconLinkProps = {\n    icon: IconProp\n    url: string\n}\n\nexport const IconLink: FunctionComponent<IconLinkProps> = (props: IconLinkProps): JSX.Element => {\n    const {\n        icon,\n        url\n    }: any = props\n    return <li className={ classNames(\"list-inline-item\", \"g-mx-2\") }\n    >\n        <a className={ classNames(\"u-icon-v1\",\n                                  \"u-icon-size--sm\",\n                                  'u-icon-slide-up--hover',\n                                  'g-color-gray-light-v1',\n                                  \"g-bg-gray-light-v5\",\n                                  \"g-color-gray-light-v1--hover\",\n                                  \"rounded-circle\") }\n           href={ url }\n           target={ \"_blank\" }>\n            <i className={ classNames(\"g-font-size-default\", \"g-line-height-1\", \"u-icon__elem-regular\") }>\n                <FontAwesomeIcon width={ 8 } height={ 14 }\n                                 icon={ icon }/>\n            </i>\n            <i className={ classNames(\"g-font-size-default\", \"g-line-height-1\", \"u-icon__elem-hover\") }>\n                <FontAwesomeIcon width={ 8 } height={ 14 }\n                                 icon={ icon }/>\n            </i>\n        </a>\n    </li>;\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { IconLink, IconLinkProps } from \"../IconLink\";\n\ntype ProfileProps = {\n    name: string\n    job_title: string\n    birthday: string\n    email: string\n    education: string\n    about: string\n    links: IconLinkProps[]\n}\n\nconst ResumeProfile: React.FunctionComponent<ProfileProps> = (props: ProfileProps) => {\n    const {\n        name,\n        links,\n        job_title,\n        birthday,\n        email,\n        education,\n        about\n    } = props;\n\n    return <>\n        <div className={ classNames(\"d-md-flex\", \"align-items-center\", \"justify-content-between\", \"g-mb-5\") }>\n            <h2 className={ classNames(\"g-font-weight-300\", \"g-mr-10\") }>{ name }</h2>\n            <ul className={ classNames(\"list-inline\", \"mb-0\") }>\n                {\n                    links.map((item: any) => {\n                        return <IconLink key={ item.title } { ...item }/>\n                    })\n                }\n            </ul>\n        </div>\n        <h6 className={ classNames(\"h6\", \"g-font-weight-300\", \"g-mb-10\") }>\n            <i className={ classNames(\"g-pos-rel\", \"g-top-1\", \"g-mr-5\", \"g-color-gray-dark-v5\") }>\n                <FontAwesomeIcon width={ 10.5 } height={ 14 }\n                                 icon={ {\n                                     prefix: \"fas\",\n                                     iconName: 'award'\n                                 } }/>\n            </i>\n            { job_title }\n        </h6>\n        <ul className={ classNames(\"list-inline\", \"g-font-weight-300\") }>\n            {\n                birthday && <li className={ classNames(\"list-inline-item\", \"g-mr-20\") }>\n                    <i className={ classNames( \"g-pos-rel\", \"g-top-1\", \"g-mr-8\", \"g-color-gray-dark-v5\") }>\n                        <FontAwesomeIcon width={ 10.5 } height={ 14 }\n                                         icon={ {\n                                             prefix: \"fas\",\n                                             iconName: 'birthday-cake'\n                                         } }/>\n                    </i>\n                    { birthday }\n                </li>\n            }\n            {\n                email && <li className={ classNames(\"list-inline-item\", \"g-mr-20\") }>\n                    <i className={ classNames(\"g-pos-rel\", \"g-top-1\", \"g-mr-8\", \"g-color-gray-dark-v5\") }>\n                        <FontAwesomeIcon width={ 10.5 } height={ 14 }\n                                         icon={ {\n                                             prefix: \"fas\",\n                                             iconName: 'at'\n                                         } }/>\n                    </i>\n                    { email }\n                </li>\n            }\n            { education && <li className={ classNames(\"list-inline-item\", \"g-mr-20\") }>\n                <i className={ classNames(\"g-pos-rel\", \"g-top-1\", \"g-mr-8\", \"g-color-gray-dark-v5\") }>\n                    <FontAwesomeIcon width={ 10.5 } height={ 14 }\n                                     icon={ {\n                                         prefix: \"fas\",\n                                         iconName: 'graduation-cap'\n                                     } }/>\n                </i>\n                { education }\n            </li> }\n        </ul>\n        <hr className={ classNames(\"g-brd-gray-light-v4\", \"g-my-20\") }/>\n        <p className={ classNames(\"lead\", \"g-line-height-18\") }>\n            { about }\n        </p>\n    </>\n}\n\nexport default ResumeProfile;\n","import classNames from \"classnames\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\nimport Layout from \"../component/layout\";\nimport ResumeProfile from \"../component/resume/profile\";\n\nconst About = (props: any) => {\n    const {\n        configYaml: profile,\n        my: image\n    }: any = props.data\n\n    return <Layout title={ \"關於我\" }>\n        <div className={ classNames('g-brd-around', 'g-brd-gray-light-v4', 'g-pa-20', 'g-mb-40') }>\n            <div className={ 'row' }>\n                <div className={ classNames('col-lg-4', 'g-mb-40', 'g-mb-0--lg') }>\n                    <div className={ 'g-py-30--lg' }>\n                        <GatsbyImage\n                            className={ classNames('img-fluid', 'w-100') }\n                            image={ getImage(image) }\n                            alt=\"Bruno Jan\"/>\n                    </div>\n                </div>\n                <div className={ 'col-lg-8' }>\n                    <ResumeProfile { ...profile } />\n                </div>\n            </div>\n        </div>\n    </Layout>\n}\n\nexport const pageQuery = graphql`\n    query {\n        configYaml {\n            name\n            about\n            id\n            job_title\n            links {\n                url\n                title\n                icon {\n                    iconName\n                    prefix\n                }\n            }\n        }\n        my: imageSharp(fluid: {originalName: {eq: \"myimage.jpg\"}}) {\n            gatsbyImageData(width: 20)\n        }\n    }\n`\n\nexport default About;\n"],"sourceRoot":""}