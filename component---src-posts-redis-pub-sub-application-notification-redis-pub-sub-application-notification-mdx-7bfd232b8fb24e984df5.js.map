{"version":3,"sources":["webpack:///./src/posts/redis-pub-sub-application-notification/redis-pub-sub-application-notification.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"gOAKaA,EAAe,CAC1B,MAAS,mCACT,YAAe,8TACf,KAAQ,2BACR,KAAQ,CAAC,QAAS,MAAO,MAAO,UAChC,WAAc,CAAC,SACf,WAAa,EACb,SAAW,GAQPC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,4DACA,gCACA,oQACA,2GACA,yCACA,8DACA,mCACA,iCACA,gCAEE,kBAAO,CACL,WAAc,cADhB,0BAKA,kBAAO,CACL,WAAc,cACb,uBAAY,CACX,WAAc,KADf,mBAFH,mJAQA,kBAAO,CACL,WAAc,cADhB,0CAKF,+GAGA,yCACA,yBAAK,qBAAU,CACX,UAAa,iBACb,WAAc,OAFb,kCAKL,qCACA,iCACA,gCAEE,kBAAO,CACL,WAAc,cADhB,0BAKA,kBAAO,CACL,WAAc,cACb,uBAAY,CACX,WAAc,KADf,mBAFH,6DAQA,kBAAO,CACL,WAAc,cADhB,qDAKF,iGAGA,yCACA,yBAAK,qBAAU,CACX,UAAa,iBACb,WAAc,OAFb,4CAKL,uCACA,iCACA,gCAEE,kBAAO,CACL,WAAc,cADhB,0BAKA,kBAAO,CACL,WAAc,cACb,uBAAY,CACX,WAAc,KADf,mBAFH,4EAQA,kBAAO,CACL,WAAc,cADhB,2FAKF,wFAGA,2CACA,yBAAK,qBAAU,CACX,UAAa,iBACb,WAAc,OAFb,8CAKL,gCACA,6DACA,wEACA,yBAAK,qBAAU,CACX,UAAa,cACb,WAAc,OAFb,0CAKL,uCACA,0CACA,yGACA,yBAAK,qBAAU,CACX,UAAa,cACb,WAAc,OAFb,iCAKL,uCACE,kBAAO,CACL,KAAQ,+GACR,WAAc,KAFhB,QADF,8BAMA,yBAAK,qBAAU,CACX,UAAa,cACb,WAAc,OAFb,qaAgBL,uCACA,6FACA,yBAAK,qBAAU,CACX,UAAa,cACb,WAAc,OAFb,uCAKL,8KAEA,uBAAG,oBAAS,CACR,IAAO,qCACP,IAAO,eACP,WAAc,OAElB,0FACA,yBAAK,qBAAU,CACX,UAAa,cACb,WAAc,OAFb,sFAQL,yEACA,wCACA,wGACA,uBAAG,oBAAS,CACR,IAAO,qCACP,IAAO,aACP,WAAc,OAElB,yBAAK,qBAAU,CACX,UAAa,cACb,WAAc,OAFb,0EAML,yIACA,gCACA,uBAAG,kBAAO,CACN,KAAQ,gCACR,WAAc,KAFf,kBAIH,uBAAG,kBAAO,CACN,KAAQ,mCACR,WAAc,KAFf,oBAIH,uBAAG,kBAAO,CACN,KAAQ,qCACR,WAAc,KAFf,sBAIH,uBAAG,kBAAO,CACN,KAAQ,uCACR,WAAc,KAFf,wBAIH,uBAAG,kBAAO,CACN,KAAQ,uDACR,WAAc,KAFf,+BAIH,uBAAG,kBAAO,CACN,KAAQ,sDACR,WAAc,KAFf,+BAOPH,EAAWI,gBAAiB,G,kCCxOb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-posts-redis-pub-sub-application-notification-redis-pub-sub-application-notification-mdx-7bfd232b8fb24e984df5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"【Redis】Redis Pub/Sub 製作應用程式間推播通知\",\n  \"description\": \"在很多時候我們的部屬環境是很複雜的，無法使用單一個應用程式來解決我們的問題...（例如：Windows server與Linux Server、多個網站或多個不同類型執行個體、網站搭配console應用程式）此時當應用程式間需要配合時是一個很重要的議題，很多人會把資料存放到資料庫，應用程式在定期去擷取尚未處理的資料，等相關資料處理完畢後再到資料庫注記哪些記錄是已經處理完畢的，在這樣的軟體設計與環境相對簡單許多，但是在系統繁忙的時間中，這可不是一個樂觀的狀態了..\\n現在Redis具有這樣的功能，可以協助我們設計應用程式間可以互相配合的一個機制，如此一來我們就不需要在透過定期存取資料庫，相關的訊息或相關的資料可以及時的處理！\",\n  \"date\": \"2016-02-24T03:55:09.000Z\",\n  \"tags\": [\"Redis\", \"pub\", \"sub\", \"notify\"],\n  \"categories\": [\"Redis\"],\n  \"published\": true,\n  \"comment\": true\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`【Redis】Redis Pub/Sub 製作應用程式間推播通知`}</h1>\n    <h2>{`寫在前面`}</h2>\n    <p>{`在很多時候我們的部屬環境是很複雜的，無法使用單一個應用程式來解決我們的問題...（例如：Windows server與Linux Server、多個網站或多個不同類型執行個體、網站搭配console應用程式）此時當應用程式間需要配合時是一個很重要的議題，很多人會把資料存放到資料庫，應用程式在定期去擷取尚未處理的資料，等相關資料處理完畢後再到資料庫注記哪些記錄是已經處理完畢的，在這樣的軟體設計與環境相對簡單許多，但是在系統繁忙的時間中，這可不是一個樂觀的狀態了..`}</p>\n    <p>{`現在Redis具有這樣的功能，可以協助我們設計應用程式間可以互相配合的一個機制，如此一來我們就不需要在透過定期存取資料庫，相關的訊息或相關的資料可以及時的處理！`}</p>\n    <h2>{`Redis Command`}</h2>\n    <p>{`在使用推播前需要先瞭解三個指令，這三個指令是做應用程式推播時相關的指令`}</p>\n    <h3>{`Publish`}</h3>\n    <h4>{`官網的說明`}</h4>\n    <blockquote>\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`Available since 2.0.0.`}</p>\n\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}><strong {...{\n          \"parentName\": \"p\"\n        }}>{`Time complexity`}</strong>\n        {`: O(N+M) where N is the number of clients subscribed to the receiving channel and M is the total number of subscribed patterns (by any client).`}</p>\n\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`Posts a message to the given channel.`}</p>\n\n    </blockquote>\n    <p>{`Redis最低版本：2.0\n這個指令主要的用途就是將訊息推進某一個頻道中。\n而時間複雜度是：O(N+M)，N是訂閱這個頻道的Client數量，M是所有訂閱者的數量。`}</p>\n    <h4>{`Publish 指令的格式`}</h4>\n    <pre><code {...{\n        \"className\": \"language-shell\",\n        \"parentName\": \"pre\"\n      }}>{`Publish [channel] [message]\n`}</code></pre>\n    <h3>{`Subscribe`}</h3>\n    <h4>{`官網的說明`}</h4>\n    <blockquote>\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`Available since 2.0.0.`}</p>\n\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}><strong {...{\n          \"parentName\": \"p\"\n        }}>{`Time complexity`}</strong>\n        {`: O(N) where N is the number of channels to subscribe to.`}</p>\n\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`Subscribes the client to the specified channels.`}</p>\n\n    </blockquote>\n    <p>{`Redis最低版本：2.0\n這個指令主要的用途是訂閱頻道，用來接收訂閱頻道中的訊息。\n而時間複雜度是：O(N)，N是指要訂閱頻道的總數目`}</p>\n    <h4>{`Subscribe指令格式`}</h4>\n    <pre><code {...{\n        \"className\": \"language-shell\",\n        \"parentName\": \"pre\"\n      }}>{`SUBSCRIBE [channel 1] [channel 2] ...\n`}</code></pre>\n    <h3>{`UnSubscribe`}</h3>\n    <h4>{`官網的說明`}</h4>\n    <blockquote>\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`Available since 2.0.0.`}</p>\n\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}><strong {...{\n          \"parentName\": \"p\"\n        }}>{`Time complexity`}</strong>\n        {`: O(N) where N is the number of clients already subscribed to a channel.`}</p>\n\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`Unsubscribes the client from the given channels, or from all of them if none is given.`}</p>\n\n    </blockquote>\n    <p>{`Redis最低版本：2.0\n這個指令主要的用途是取消訂閱頻道。\n而時間複雜度是：O(N)，N是指要取消訂閱頻道的總數目`}</p>\n    <h4>{`UnSubscribe指令格式`}</h4>\n    <pre><code {...{\n        \"className\": \"language-shell\",\n        \"parentName\": \"pre\"\n      }}>{`UNSUBSCRIBE [channel 1] [channel 2] ...\n`}</code></pre>\n    <h2>{`系統開發`}</h2>\n    <h3>{`存取Redis in C#：StackExchange.Redis`}</h3>\n    <p>{`這是一套存取Redis的一個套件，在稍候的程式開發中，都會使用到這個套件來存取Redis！`}</p>\n    <pre><code {...{\n        \"className\": \"language-cs\",\n        \"parentName\": \"pre\"\n      }}>{`Install-Package StackExchange.Redis\n`}</code></pre>\n    <h3>{`Subscribe開發`}</h3>\n    <h4>{`Step1. 連結Redis`}</h4>\n    <p>{`在使用Redis需要先建立connection，才能連結到Redis。再使用StackExchange.Redis 套件時需要先引入他的namespace。`}</p>\n    <pre><code {...{\n        \"className\": \"language-cs\",\n        \"parentName\": \"pre\"\n      }}>{`using StackExchange.Redis;\n`}</code></pre>\n    <p>{`設定Redis連線可以參考`}\n      <a {...{\n        \"href\": \"https://github.com/StackExchange/StackExchange.Redis/blob/master/Docs/Configuration.md#configuration-options\",\n        \"parentName\": \"p\"\n      }}>{`這篇文章`}</a>\n      {`上面會有參數的說明，這邊沒有一一列舉相關的參數設定。`}</p>\n    <pre><code {...{\n        \"className\": \"language-cs\",\n        \"parentName\": \"pre\"\n      }}>{`var configurationOptions = new ConfigurationOptions\n{\n    AbortOnConnectFail = false,\n    Password = \"password\",\n    Ssl = false,\n    ConnectTimeout = 6000,\n    SyncTimeout = 6000\n};\nconfigurationOptions.EndPoints.Add(new DnsEndPoint(\"redis host\", port));\n// IP:\n// configurationOptions.EndPoints.Add(IP Address, port));\nConnectionMultiplexer redis = ConnectionMultiplexer.Connect(configurationOptions);\n`}</code></pre>\n    <h4>{`Step2. 訂閱頻道`}</h4>\n    <p>{`在StackExchange.Redis 取得連線後，開始開發訂閱頻道前要先取得Redis的Subcriber，才能發佈或是訂閱訊息`}</p>\n    <pre><code {...{\n        \"className\": \"language-cs\",\n        \"parentName\": \"pre\"\n      }}>{`var sub = redis.GetSubscriber();\n`}</code></pre>\n    <p>{`在訂閱訊息前，先看一下StackExchange.Redis中Subscribe的說明\n第一個參數是頻道名稱，這邊可以直接使用字串來代表RedisChannel的型別，第二個是一個Action的委派型別，第三個是commandFlag，這個主要的用途是在描述指令該如何執行，這個參數可以省略。`}</p>\n    <p><img {...{\n        \"src\": \"/img/RedisPubSub/RedisPubSub01.png\",\n        \"alt\": \"Subscribe的說明\",\n        \"parentName\": \"p\"\n      }} /></p>\n    <p>{`這裡做一個範例，我在這裡訂閱了一個Study4TW的頻道，然後指定了收到這個訊息要做哪些事情（寫在Do Something中）`}</p>\n    <pre><code {...{\n        \"className\": \"language-cs\",\n        \"parentName\": \"pre\"\n      }}>{`sub.Subscribe(\"Study4TW\", (channel, message) =>\n {\n     // Do Something\n });\n`}</code></pre>\n    <p>{`如此只要寫在系統loading時就可以訂閱到該頻道，這個只要做一次就可以了，不需要每次執行！`}</p>\n    <h4>{`Step3. 送出訊息！`}</h4>\n    <p>{`送出訊息的指令相當簡單，只要填上你是哪一個頻道，以及你要送出的訊息即可！在RedisChannel與RedisValue兩個型別都可以使用字串來傳遞即可。`}</p>\n    <p><img {...{\n        \"src\": \"/img/RedisPubSub/RedisPubSub02.png\",\n        \"alt\": \"Publish的說明\",\n        \"parentName\": \"p\"\n      }} /></p>\n    <pre><code {...{\n        \"className\": \"language-cs\",\n        \"parentName\": \"pre\"\n      }}>{`var sub = redis.GetSubscriber();\nsub.Publish(\"Study4TW\", message);\n`}</code></pre>\n    <p>{`在搭配前面Step2的程式碼，在這樣簡單的範例就可以在應用程序間互相通訊了！就不再需要透過資料庫來做訊息通知了，也不用使用IF去判別這一個訊息要怎麼處理或是交給哪一個method處理，增加程式碼的可讀性！是否受用無窮阿？`}</p>\n    <h2>{`參考資料`}</h2>\n    <p><a {...{\n        \"href\": \"http://redis.io/topics/pubsub\",\n        \"parentName\": \"p\"\n      }}>{`Redis Pub/Sub`}</a></p>\n    <p><a {...{\n        \"href\": \"http://redis.io/commands/publish\",\n        \"parentName\": \"p\"\n      }}>{`Publish - Redis`}</a></p>\n    <p><a {...{\n        \"href\": \"http://redis.io/commands/subscribe\",\n        \"parentName\": \"p\"\n      }}>{`Subscribe - Redis`}</a></p>\n    <p><a {...{\n        \"href\": \"http://redis.io/commands/unsubscribe\",\n        \"parentName\": \"p\"\n      }}>{`UnSubscribe - Redis`}</a></p>\n    <p><a {...{\n        \"href\": \"https://github.com/StackExchange/StackExchange.Redis\",\n        \"parentName\": \"p\"\n      }}>{`StackExchange.Redis GitHub`}</a></p>\n    <p><a {...{\n        \"href\": \"https://www.nuget.org/packages/StackExchange.Redis/\",\n        \"parentName\": \"p\"\n      }}>{`StackExchange.Redis nuget`}</a></p>\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}