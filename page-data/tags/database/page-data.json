{
    "componentChunkName": "component---src-pages-tags-tsx",
    "path": "/tags/database",
    "result": {"data":{"allMdx":{"edges":[{"node":{"id":"6f4a3162-6752-58a7-989f-400c04275620","frontmatter":{"title":"Postgresql 的Merge語法","description":"在SQL Server中有一個語法是merge的語法，他可以根據特定的條件執行特定的操作，如資料存在就更新不存在就新增。 但在Postgresql中，似乎沒有merge的語法可以使用...但在程式理先去得資料在判斷是否更新或新增這樣的情境容易導致一些後遺症.... 在google後，其實有很多方式但...嘗試後只有這個方法是可行的，所以在這邊筆記一下","date":"2022-10-04"},"fields":{"path":"/2022/10/04/postgresql-insert-or-update"},"fileAbsolutePath":"/Users/Yi-Shiuan/Documents/git/Blogger/src/posts/postgresql-insert-or-update/index.mdx"}},{"node":{"id":"6648e70c-ba41-53e2-b4fe-c6d0474e6638","frontmatter":{"title":"透過Dapper存取Postgresql Json column 自動反序列化","description":"有時候一個物件我會把它序列化後使用JSON的方式存放到postgresql中，但把它取出後卻無法透過ORM直接做資料的對應，然後自己就土炮了做法， 把資料撈出後在針對欄位去反序列化，這樣做一開始覺得好像沒什麼，但這樣的資料變多了以後發現問體頗大，所以上網找了一些解決方案， 但關鍵字嚇得不好反而找到許多更奇怪的做法後來在stackoverflow上看到了這招真心覺得很棒的方法，於是筆記下來！","date":"2022-09-30"},"fields":{"path":"/2022/09/30/postgresql-dapper-json-deserialize"},"fileAbsolutePath":"/Users/Yi-Shiuan/Documents/git/Blogger/src/posts/postgresql-dapper-json-deserialize/index.mdx"}}]}},"pageContext":{"id":"database"}},
    "staticQueryHashes": ["2069471281","2579648174","3564308881","3673915224"]}