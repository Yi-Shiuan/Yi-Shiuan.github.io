{"componentChunkName":"component---src-pages-posts-tsx","path":"/posts/","result":{"data":{"mdx":{"id":"1e57f93e-5862-5c24-958b-5215964bffe6","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[ProtoBuf] ProtoBuf Serialize 與 DeSerialize！\",\n  \"description\": \"這一篇應該是我ProtoBuf的系列文章第二篇，上一篇只簡單說了一些安裝方式與一些定義檔 的設定根本就不知道該如何使用這一個好用的序列化工具。依樣會是使用protobuf-net 這一個套件來做一個簡單的紀錄。\",\n  \"tags\": [\"ProtoBuf\", \"serialize\", \"deserialize\"],\n  \"categories\": [\"ProtoBuf\"],\n  \"published\": true,\n  \"comment\": true,\n  \"date\": \"2016-10-07T22:44:15.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ProtoBuf\"), mdx(\"p\", null, \"\\u9019\\u4E00\\u7BC7\\u61C9\\u8A72\\u662F\\u6211ProtoBuf\\u7684\\u7CFB\\u5217\\u6587\\u7AE0\\u7B2C\\u4E8C\\u7BC7\\uFF0C\\u4E0A\\u4E00\\u7BC7\\u53EA\\u7C21\\u55AE\\u8AAA\\u4E86\\u4E00\\u4E9B\\u5B89\\u88DD\\u65B9\\u5F0F\\u8207\\u4E00\\u4E9B\\u5B9A\\u7FA9\\u6A94\\n\\u7684\\u8A2D\\u5B9A\\u6839\\u672C\\u5C31\\u4E0D\\u77E5\\u9053\\u8A72\\u5982\\u4F55\\u4F7F\\u7528\\u9019\\u4E00\\u500B\\u597D\\u7528\\u7684\\u5E8F\\u5217\\u5316\\u5DE5\\u5177\\u3002\\u4F9D\\u6A23\\u6703\\u662F\\u4F7F\\u7528protobuf-net\\n\\u9019\\u4E00\\u500B\\u5957\\u4EF6\\u4F86\\u505A\\u4E00\\u500B\\u7C21\\u55AE\\u7684\\u7D00\\u9304\\u3002\"), mdx(\"h2\", null, \"ProtoBuf \\u5E8F\\u5217\\u5316\"), mdx(\"p\", null, \"\\u5728\\u4F7F\\u7528 ProtoBuf \\u7684\\u7B2C\\u4E00\\u6B65\\u5C31\\u5FC5\\u9808\\u4E86\\u89E3 Stream \\u7684\\u8CC7\\u6599\\u683C\\u5F0F\\uFF0C\\u56E0\\u70BA\\u5728(\\u53CD)\\u5E8F\\u5217\\u5316\\n\\u7684\\u904E\\u7A0B\\u4E2D\\uFF0C\\u9810\\u8A2D\\u90FD\\u662F\\u4F7F\\u7528 Stream \\u4F5C\\u70BA\\u5A92\\u4ECB\\u3002\\u5E8F\\u5217\\u5316\\u7684\\u90E8\\u4EFD\\u662F\\u4F7F\\u7528 Serializer.Serialize\\n\\u9019\\u500B\\u65B9\\u6CD5\\u4F86\\u8655\\u7406\\u3002\"), mdx(\"h3\", null, \"Simple Code 1 - \\u5E8F\\u5217\\u5316\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-cs\",\n    \"parentName\": \"pre\"\n  }, \"public void SerializeToStream<T>(T data, Stream stream)\\n{\\n    Serializer.Serialize(stream, data)\\n}\\n\\npublic void Main()\\n{\\n    using (var stream = new MemoryStream())\\n    {\\n        this.SerializeToStream<object>(data, stream);\\n    }\\n}\\n\")), mdx(\"p\", null, \"\\u4E3B\\u8981\\u539F\\u56E0\\u662F\\u82E5Stream\\u95DC\\u9589\\u5F8C\\u5C31\\u7121\\u6CD5\\u505A\\u4EFB\\u4F55\\u7684\\u64CD\\u4F5C\\uFF0C\\u6240\\u4EE5\\u4EA4\\u7531\\u5916\\u90E8\\u4F86\\u63A7\\u5236Stream\\u7684\\u8CC7\\u6E90\\u521D\\u59CB\\u8207\\u56DE\\u6536\\u3002\\n\\u53EF\\u4EE5\\u5728\\u5E8F\\u5217\\u5316\\u6210\\u70BA Array \\u6216 String \\u7684\\u683C\\u5F0F\\u3002\"), mdx(\"h3\", null, \"Simple Code 2 - Serialize to byte array and string\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-cs\",\n    \"parentName\": \"pre\"\n  }, \"public byte[] SerializeToBytes<T>(T data)\\n{\\n    byte[] result;\\n    using (var stream = new MemoryStream())\\n    {\\n        this.SerializeToStream(data, stream);\\n        result = stream.ToArray();\\n    }\\n\\n    return result;\\n}\\n\\npublic string SerializeToString<T>(T data)\\n{\\n    string result;\\n    using (var stream = new MemoryStream())\\n    {\\n        this.SerializeToStream(data, stream);\\n        result = Encoding.ASCII.GetString(stream.ToArray());\\n    }\\n\\n    return result;\\n}\\n\")), mdx(\"p\", null, \"\\u5728Format \\u6210 String \\u6211\\u662F\\u63A1\\u7528ASCII\\u7684\\u7DE8\\u78BC\\u65B9\\u5F0F\\uFF0C\\u8B93\\u4ED6\\u51FA\\u4F86\\u6703\\u50CF16\\u9032\\u4F4D\\u7684\\u611F\\u89BA\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    \"parentName\": \"blockquote\"\n  }, \"\\u4E5F\\u53EF\\u4EE5\\u4F7F\\u7528 Convert.ToBase64String(stream.ToArray()); \\u7522\\u751F\\u6587\\u5B57\\u8CC7\\u6599\")), mdx(\"h2\", null, \"ProtoBuf \\u53CD\\u5E8F\\u5217\\u5316\"), mdx(\"p\", null, \"\\u5728\\u53CD\\u5E8F\\u5217\\u5316\\u7684\\u90E8\\u5206\\u4E5F\\u662F\\u9810\\u8A2D\\u63A1\\u7528 Stream \\u7684\\u8CC7\\u6599\\u683C\\u5F0F\\u4F86\\u8655\\u7406\\uFF0C\"), mdx(\"h3\", null, \"Simple Code 3 - \\u53CD\\u5E8F\\u5217\\u5316\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-cs\",\n    \"parentName\": \"pre\"\n  }, \"public T SerializeToStream<T>(Stream stream)\\n{\\n    return Serializer.Deserialize<T>(stream, data)\\n}\\n\")), mdx(\"h3\", null, \"Simple Code 4 - \\u91DD\\u5C0D Byte array and string deserialize\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-cs\",\n    \"parentName\": \"pre\"\n  }, \"public T DeSerializeFromBytes<T>(byte[] data)\\n{\\n    T result;\\n    using (var stream = new MemoryStream(data))\\n    {\\n        stream.Seek(0, SeekOrigin.Begin);\\n        result = this.DeSerializeFromStream<T>(stream);\\n    }\\n\\n    return result;\\n}\\n\\npublic T DeSerializeFromString<T>(string data)\\n{\\n    return this.DeSerializeFromBytes<T>(Encoding.ASCII.GetBytes(data));\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    \"parentName\": \"blockquote\"\n  }, \"\\u6CE8\\uFF1A \\u82E5string\\u662F\\u4F7F\\u7528base64\\u5B57\\u5143\\u8F38\\u51FA\\uFF0C\\u90A3\\u9EBC\\u5728deserialize\\u6642\\u5C31\\u5FC5\\u9808\\u4F7F\\u7528\\nConvert.FromBase64String(data) \\u8655\\u7406\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"[ProtoBuf] ProtoBuf Serialize 與 DeSerialize！","description":"這一篇應該是我ProtoBuf的系列文章第二篇，上一篇只簡單說了一些安裝方式與一些定義檔 的設定根本就不知道該如何使用這一個好用的序列化工具。依樣會是使用protobuf-net 這一個套件來做一個簡單的紀錄。","date":"07 Oct 2016"},"fields":{"path":"/2016/10/08/protobuf-serialize-and-deserialize/"}}},"pageContext":{}},"staticQueryHashes":["2579648174","2711837957","3052742788","3564308881","4283910968"]}