{"componentChunkName":"component---src-pages-posts-tsx","path":"/posts/2020/09/06/jenkins-selenium-grid","result":{"data":{"mdx":{"id":"4f115190-27de-564c-af7e-64fff2aed6c6","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"透過Jenkins啟動Selenium Grid執行自動化測試\",\n  \"description\": \"QA測試當然不是只測試RD這次上線的範圍而已，而是把過去上線的功能都要在驗過一遍才能算是經過QA測試的版本，但是隨著時間的積累線上的系統越來越多 有時候QA無法透過手動的方式完成所有驗證，這時候都會導入自動畫測試selenium來協助QA做完系統的驗證，在目前我服務的公司把CD與自動化測試的部分做了整合， 當QAT部署完成後就會驅動QA的自動化驗證，但是當自動化驗證的Job越來越多一台機器已經很難在3-5分鐘內完成自動化測試怎麼辦？\",\n  \"tags\": [\"ci\", \"selenium\", \"jenkins\"],\n  \"date\": \"2020-09-06T00:00:00.000Z\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\u900F\\u904EJenkins\\u555F\\u52D5Selenium Grid\\u57F7\\u884C\\u81EA\\u52D5\\u5316\\u6E2C\\u8A66\"), mdx(\"h2\", null, \"\\u5BEB\\u5728\\u524D\\u9762\"), mdx(\"p\", null, \"\\u4E00\\u822C\\u6211\\u5011\\u4E0A\\u9650\\u6D41\\u7A0B\\u90FD\\u542B\\u6709QA\\u7684\\u6E2C\\u8A66\\u968E\\u6BB5\\uFF0CQA\\u7684\\u6E2C\\u8A66\\u8207RD\\u7684\\u958B\\u767C\\u6709\\u8457\\u5F88\\u5927\\u7684\\u5340\\u5225...\"), mdx(\"p\", null, \"QA\\u6E2C\\u8A66\\u7576\\u7136\\u4E0D\\u662F\\u53EA\\u6E2C\\u8A66RD\\u9019\\u6B21\\u4E0A\\u7DDA\\u7684\\u7BC4\\u570D\\u800C\\u5DF2\\uFF0C\\u800C\\u662F\\u628A\\u904E\\u53BB\\u4E0A\\u7DDA\\u7684\\u529F\\u80FD\\u90FD\\u8981\\u5728\\u9A57\\u904E\\u4E00\\u904D\\u624D\\u80FD\\u7B97\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u7D93\\u904EQA\\u6E2C\\u8A66\"), \"\\u7684\\u7248\\u672C\\uFF0C\\u4F46\\u662F\\u96A8\\u8457\\u6642\\u9593\\u7684\\u7A4D\\u7D2F\\u7DDA\\u4E0A\\u7684\\u7CFB\\u7D71\\u8D8A\\u4F86\\u8D8A\\u591A\\n\\u6709\\u6642\\u5019QA\\u7121\\u6CD5\\u900F\\u904E\\u624B\\u52D5\\u7684\\u65B9\\u5F0F\\u5B8C\\u6210\\u6240\\u6709\\u9A57\\u8B49\\uFF0C\\u9019\\u6642\\u5019\\u90FD\\u6703\\u5C0E\\u5165\\u81EA\\u52D5\\u756B\\u6E2C\\u8A66selenium\\u4F86\\u5354\\u52A9QA\\u505A\\u5B8C\\u7CFB\\u7D71\\u7684\\u9A57\\u8B49\\uFF0C\\u5728\\u76EE\\u524D\\u6211\\u670D\\u52D9\\u7684\\u516C\\u53F8\\u628ACD\\u8207\\u81EA\\u52D5\\u5316\\u6E2C\\u8A66\\u7684\\u90E8\\u5206\\u505A\\u4E86\\u6574\\u5408\\uFF0C\\n\\u7576QAT\\u90E8\\u7F72\\u5B8C\\u6210\\u5F8C\\u5C31\\u6703\\u9A45\\u52D5QA\\u7684\\u81EA\\u52D5\\u5316\\u9A57\\u8B49\\uFF0C\\u4F46\\u662F\\u7576\\u81EA\\u52D5\\u5316\\u9A57\\u8B49\\u7684Job\\u8D8A\\u4F86\\u8D8A\\u591A\\u4E00\\u53F0\\u6A5F\\u5668\\u5DF2\\u7D93\\u5F88\\u96E3\\u57283-5\\u5206\\u9418\\u5167\\u5B8C\\u6210\\u81EA\\u52D5\\u5316\\u6E2C\\u8A66\\u600E\\u9EBC\\u8FA6\\uFF1F\"), mdx(\"p\", null, \"\\u5728\\u7DB2\\u8DEF\\u4E0A\\u5F88\\u591A\\u63A1\\u7528Selenium Grid\\u7684\\u4EBA\\uFF0C\\u5927\\u591A\\u90FD\\u662F\\u6709\\u4E00\\u500B\\u9700\\u6C42\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u591A\\u700F\\u89BD\\u5668\\u6E2C\\u8A66\"), \"\\uFF0C\\u76EE\\u524D\\u6211\\u5011\\u53EA\\u91DD\\u5C0Dchrome\\u505A\\u6E2C\\u8A66\\u4F46\\u4ED6\\u4E5F\\u80FD\\u5728\\u591A\\u53F0\\u6A5F\\u5668\\u4E0A\\u70BA\\u6211\\u5011\\u5B8C\\u6210\\u8A31\\u591A\\n\\u81EA\\u52D5\\u5316\\u6E2C\\u8A66\\u7684\\u9700\\u6C42\\uFF0C\\u6211\\u5011\\u5247\\u662F\\u56E0\\u70BA\\u8A31\\u591A\\u5C0F\\u800C\\u7F8E\\u7684\\u81EA\\u52D5\\u5316\\u6E2C\\u8A66\\u9700\\u8981\\u88AB\\u5B8C\\u6210\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5728\\u505A\\u81EA\\u52D5\\u5316\\u6E2C\\u8A66\\u7684\\u6642\\u5019\\uFF0C\\u6211\\u7684\\u5EFA\\u8B70\\u662F\\u6BCF\\u4E00\\u6B21\\u53EA\\u9A57\\u8B49\\u4E00\\u9805\\u529F\\u80FD\\u662F\\u5426\\u5982\\u6211\\u5011\\u9810\\u671F\\u7684\\u904B\\u4F5C\\uFF0C\\u7136\\u5F8C\\u628A\\u6BCF\\u500B\\u5DE5\\u4F5C\\u90FD\\u62C6\\u5206\\u6210\\u5C0F\\u7684Task\\u4F86\\u5B8C\\u6210\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u597D\\u8655\\u662F\\u53EF\\u4EE5\\u900F\\u904ESelenium Grid\\u540C\\u6642\\u57F7\\u884C\\u9A57\\u8B49\\u6E1B\\u5C11\\u6642\\u9593\\u6210\\u672C\\uFF0C\\u53E6\\u5916\\u4E5F\\u53EF\\u4EE5\\u907F\\u514D\\u67D0\\u4E00\\u500B\\u529F\\u80FD\\u9A57\\u8B49\\u5931\\u6548\\uFF0C\\u800C\\u5C0E\\u81F4\\u5F8C\\u9762\\u7684\\u529F\\u80FD\\u7121\\u6CD5\\u9A57\\u8B49\")), mdx(\"h2\", null, \"\\u67B6\\u69CB\\u8AAA\\u660E\"), mdx(\"p\", null, \"Jenkins\\u6211\\u662F\\u63A1\\u7528Master\\u8DDFAgent\\u7684\\u65B9\\u5F0F\\u5EFA\\u5236\\u7684\\uFF0CSelenium \\u4E5F\\u9069\\u7528Hub\\u8DDFNode\\u7684\\u65B9\\u5F0F\\u5EFA\\u7F6E\\u7684\"), mdx(\"img\", {\n    \"src\": \"./jenkins-selenium.png\",\n    \"alt\": \"jenkins-selenium.png\"\n  }), mdx(\"p\", null, \"Jenkins\\u8207Selenium\\u5747\\u63A1\\u7528docker\\u4E26\\u7D50\\u5408docker compose\\u8D77\\u52D5\\uFF0C\\u9019\\u908A\\u662F\\u6211\\u64B0\\u5BEB\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose.yml\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5728Selenium Node\\u7684\\u90E8\\u5206\\u662F\\u63A1\\u7528linux\\u7684\\u7248\\u672C\\uFF0C\\u4E3B\\u8981\\u539F\\u56E0\\u662F\\u96F2\\u7AEF\\u670D\\u52D9\\u7684Windows\\u6A5F\\u5668\\u50F9\\u683C\\u6BD4\\u8F03\\u9AD8\\uFF0C\\u6240\\u4EE5\\u5728\\u90E8\\u7F72\\u670D\\u52D9\\u4E0A\\u4EE5linux\\u70BA\\u4E3B\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"version: '3.7'\\nservices:\\n  master:\\n    image: jenkins/jenkins:2.254\\n    logging:\\n      options:\\n        max-size: 100m\\n        max-file: \\\"1\\\"\\n    restart: always\\n    user: root\\n    networks:\\n      - net\\n    ports:\\n      - \\\"80:8080\\\"\\n      - \\\"50000:50000\\\"\\n    volumes:\\n      - jenkins:/var/jenkins_home\\n    environment:\\n      JAVA_OPTS: -Duser.timezone=Asia/Taipei\\n      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8\\n\\n  test:\\n    image: docker.boyu66.cc/common/selenium:4.2\\n    user: root\\n    logging:\\n      options:\\n        max-size: 100m\\n        max-file: \\\"1\\\"\\n    networks:\\n      - net\\n    depends_on:\\n      - master\\n    restart: always\\n    volumes:\\n      - test:/home/root\\n    environment:\\n      JAVA_OPTS: -Duser.timezone=Asia/Taipei\\n    command: -url http://jenkins.boyu66.cc -workDir /home/root/agent {secretKey} TestAgent\\n\\n  hub:\\n    image: selenium/hub:3.141.59-20200409\\n    user: root\\n    ports:\\n      - \\\"4444:4444\\\"\\n    logging:\\n      options:\\n        max-size: 100m\\n        max-file: \\\"1\\\"\\n    networks:\\n      - net\\n    depends_on:\\n      - master\\n    restart: always\\n\\n  chrome:\\n    image: selenium/node-chrome:3.141.59-20200409\\n    user: root\\n    networks:\\n      - net\\n    volumes:\\n      - /dev/shm:/dev/shm\\n    depends_on:\\n      - hub\\n    environment:\\n      NODE_MAX_INSTANCES: 10\\n      NODE_APPLICATION_NAME: chrome\\n      NODE_MAX_SESSION: 10\\n      JAVA_OPTS: -Xmx512m\\n\\n\\nnetworks:\\n  net:\\n    driver: bridge\\n\\nvolumes:\\n  jenkins:\\n  test:\\n\")), mdx(\"h2\", null, \"\\u5EFA\\u7ACBJenkins test agent\\u7684docker image\"), mdx(\"p\", null, \"\\u5728test agent \\u7684dockerfile\\u6211\\u9078\\u7528\\u4E86ubuntu\\u4F5C\\u70BAbase image\\uFF0C\\u6642\\u5340\\u7684\\u90E8\\u5206\\u8A2D\\u5B9A\\u5230\\u4E86\\u53F0\\u5317\\u4E26\\u5B89\\u88DDopenjdk\\u7B49\\u7B49\\u7684\\u5957\\u4EF6\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-dockerfile\"\n  }), \"FROM ubuntu:18.04\\n\\nARG VERSION=4.2\\nENV TZ='Asia/Taipei' \\\\\\n    HOME=/home/root\\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\\n\\nRUN apt-get update\\nRUN apt-get install -y --no-install-recommends software-properties-common \\\\\\n      openjdk-8-jre curl git \\\\\\n      && apt-get clean\\n\\nRUN curl --create-dirs -fsSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar \\\\\\n      && chmod 755 /usr/share/jenkins \\\\\\n      && chmod 644 /usr/share/jenkins/slave.jar\\n\\nWORKDIR /home/root\\nUSER root\\n\\n## Jenkins jnlp slave ##\\nCOPY jenkins-slave.sh jenkins-slave.sh\\n\\n\\nENTRYPOINT [\\\"bash\\\", \\\"/home/root/jenkins-slave.sh\\\"]\\n\")), mdx(\"p\", null, \"\\u6700\\u5F8C\\u5C07Jenkins\\u7684Job\\u6307\\u5B9A\\u5230Test Agent\\u4E0A\\u57F7\\u884C\\uFF0C\\u5728Selenium\\u7684\\u90E8\\u5206\\u628Awebdriver\\u7684\\u8A2D\\u5B9A\\u6539\\u9053\\u9060\\u7AEF\\u7684\\u4F4D\\u7F6E\\u4E0A\\u5C31\\u53EF\\u4EE5\\u4EAB\\u53D7Selenium Grid\\u4E86\\uFF01\"), mdx(\"h2\", null, \"\\u53C3\\u8003\\u8CC7\\u6599\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://wizardforcel.gitbooks.io/selenium-doc/content/official-site/selenium-grid.html\"\n  }), \"Selenium Grid \\u4E2D\\u6587\\u6587\\u9EE8\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"透過Jenkins啟動Selenium Grid執行自動化測試","description":"QA測試當然不是只測試RD這次上線的範圍而已，而是把過去上線的功能都要在驗過一遍才能算是經過QA測試的版本，但是隨著時間的積累線上的系統越來越多 有時候QA無法透過手動的方式完成所有驗證，這時候都會導入自動畫測試selenium來協助QA做完系統的驗證，在目前我服務的公司把CD與自動化測試的部分做了整合， 當QAT部署完成後就會驅動QA的自動化驗證，但是當自動化驗證的Job越來越多一台機器已經很難在3-5分鐘內完成自動化測試怎麼辦？","date":"06 Sep 2020","tags":["ci","selenium","jenkins"]},"fields":{"path":"/2020/09/06/jenkins-selenium-grid"}}},"pageContext":{"id":"4f115190-27de-564c-af7e-64fff2aed6c6"}},"staticQueryHashes":["1460034776","176875958","2579648174","3564308881","3673915224"]}