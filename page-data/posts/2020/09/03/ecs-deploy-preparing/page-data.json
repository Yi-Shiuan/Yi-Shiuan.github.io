{"componentChunkName":"component---src-pages-posts-tsx","path":"/posts/2020/09/03/ecs-deploy-preparing","result":{"data":{"mdx":{"id":"ca510641-61e7-5084-b37f-f8a4c4724bf8","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AWS ECS Preparing Release 紀錄\",\n  \"description\": \"我們在aws 做Production deploy的時候，都會有一個pre production的環境，這個環境主要是為了在部署流程結束後可以做概念性驗證的環境 （主要測試：db connection是否正常、網路連線、裝機腳本等等）另一個方面可以預熱application，不過我們開始有越來越多採用docker的 application並且使用ECS的部署模式，但是ECS的Service建立後就無法修改Target Group，因此沒辦法如同EC2的部署模式只在最後切換Target Group\",\n  \"tags\": [\"ecs\", \"aws\", \"cd\", \"devops\", \"provisioned\", \"ansible\"],\n  \"date\": \"2020-09-03T00:00:00.000Z\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"AWS ECS Preparing Release \\u7D00\\u9304\"), mdx(\"h2\", null, \"\\u5BEB\\u5728\\u524D\\u9762\"), mdx(\"p\", null, \"\\u6211\\u5011\\u5728aws \\u505AProduction deploy\\u7684\\u6642\\u5019\\uFF0C\\u90FD\\u6703\\u6709\\u4E00\\u500Bpre production\\u7684\\u74B0\\u5883\\uFF0C\\u9019\\u500B\\u74B0\\u5883\\u4E3B\\u8981\\u662F\\u70BA\\u4E86\\u5728\\u90E8\\u7F72\\u6D41\\u7A0B\\u7D50\\u675F\\u5F8C\\u53EF\\u4EE5\\u505A\\u6982\\u5FF5\\u6027\\u9A57\\u8B49\\u7684\\u74B0\\u5883\\n\\uFF08\\u4E3B\\u8981\\u6E2C\\u8A66\\uFF1Adb connection\\u662F\\u5426\\u6B63\\u5E38\\u3001\\u7DB2\\u8DEF\\u9023\\u7DDA\\u3001\\u88DD\\u6A5F\\u8173\\u672C\\u7B49\\u7B49\\uFF09\\u53E6\\u4E00\\u500B\\u65B9\\u9762\\u53EF\\u4EE5\\u9810\\u71B1application\\uFF0C\\u4E0D\\u904E\\u6211\\u5011\\u958B\\u59CB\\u6709\\u8D8A\\u4F86\\u8D8A\\u591A\\u63A1\\u7528docker\\u7684\\napplication\\u4E26\\u4E14\\u4F7F\\u7528ECS\\u7684\\u90E8\\u7F72\\u6A21\\u5F0F\\uFF0C\\u4F46\\u662FECS\\u7684Service\\u5EFA\\u7ACB\\u5F8C\\u5C31\\u7121\\u6CD5\\u4FEE\\u6539Target Group\\uFF0C\\u56E0\\u6B64\\u6C92\\u8FA6\\u6CD5\\u5982\\u540CEC2\\u7684\\u90E8\\u7F72\\u6A21\\u5F0F\\u53EA\\u5728\\u6700\\u5F8C\\u5207\\u63DBTarget Group\"), mdx(\"h2\", null, \"\\u69CB\\u601D&\\u5BE6\\u4F5C\"), mdx(\"p\", null, \"\\u4E00\\u958B\\u59CB\\u5176\\u5BE6\\u60F3\\u5F97\\u5F88\\u7C21\\u55AE\\uFF0C\\u5C31\\u662F\\u6BCF\\u6B21\\u90E8\\u7F72\\u6642\\u90FD\\u8981\\u7522\\u751F\\u65B0\\u7684 Target group \\u8207\\u65B0\\u7684ECS Service\\uFF0C\\n\\u5C07\\u65B0\\u7522\\u751F\\u7684Target Group\\u639B\\u8F09\\u5230ELB\\u7684preparing\\u898F\\u5247\\u4E0A\\uFF0C\\u7136\\u5F8C\\u9A57\\u8B49\\u5B8C\\u7562\\u5F8C\\u5C31\\u628A\\u9019\\u7D44Target Group\\u639B\\u8F09\\u5230ELB\\u7684 public\\u898F\\u5247\\u4E0A\\u5C31\\u5B8C\\u6210\\u4E86\\u4E00\\u6B21\\u7684\\u90E8\\u7F72\"), mdx(\"p\", null, \"\\u4F46...\\u4E8B\\u4EF6\\u7E3D\\u662F\\u6C92\\u60F3\\u50CF\\u4E2D\\u7684\\u7F8E\\u597D\\uFF0C\\u539F\\u5148\\u9810\\u8A08\\u5169\\u9031\\u5167\\u53EF\\u4EE5\\u5B8C\\u6210\\u7684\\u9805\\u76EE\\u8B8A\\u5230\\u4E86\\u4E09\\u9031(\\u5176\\u5BE6\\u4E2D\\u9593\\u4E5F\\u6709\\u5C0D\\u81EA\\u5DF1\\u7684\\u8981\\u6C42\\u589E\\u52A0ex: script\\u53EF\\u4EE5\\u91CD\\u8DD1\\u3001\\u81EA\\u52D5\\u79FB\\u9664\\u820A\\u7248\\u672C\\u7B49\\u7B49)\"), mdx(\"h3\", null, \"Deploy Configuration\"), mdx(\"p\", null, \"\\u9019\\u500B\\u662F\\u70BA\\u4E86\\u6E1B\\u5C11\\u4F7F\\u7528\\u8005\\u8F38\\u5165\\u8CC7\\u8A0A\\u6240\\u505A\\u7684\\u4E00\\u500B\\u8A2D\\u5B9A\\uFF0C\\u5167\\u5BB9\\u4E3B\\u8981\\u5982\\u4E0B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"VPC:\\nRegion:\\nHealthCheck:\\n    Path: \\\"/\\\"\\n    UnhealthyThreshold: 2\\n    HealthyThreshold: 5\\nLoadBalancer:\\n    Preparing:\\n    Public:\\nAutoScaling:\\n    Desired: 2\\n    MaxCount: 10\\n    MinCount: 2\\nPolicies:\\n    - Name: Scale-By-CPU-Usage\\n      CoolDown: 150\\n      Threshold: 75.0\\n      Metric: ECSServiceAverageCPUUtilization\\n    - Name: Scale-By-Memory-Usage\\n      CoolDown: 150\\n      Threshold: 75.0\\n      Metric: ECSServiceAverageMemoryUtilization\\n\")), mdx(\"h3\", null, \"Step1. \\u5EFA\\u7ACBTarget Group\"), mdx(\"p\", null, \"\\u5728\\u5EFA\\u7ACBTarget Group\\u5176\\u5BE6\\u6C92\\u4EC0\\u9EBC\\u5751\\u4E3B\\u8981\\u8E29\\u5230\\u7684\\u5C31\\u662FTarget group\\u7684\\u540D\\u5B57\\u4E0D\\u80FD\\u8D85\\u904E\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"32\"), \"\\u500B\\u5B57\\u6240\\u4EE5\\u5728\\u547D\\u540D\\u898F\\u5283\\u4E0A\\u9700\\u8981\\u601D\\u8003\\u4E00\\u4E0B\\u8A72\\u5982\\u4F55\\u5448\\u73FE\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6211\\u7684\\u547D\\u540D\\u898F\\u5247\\u662F\\uFF1A\\u74B0\\u5883-\\u670D\\u52D9\\u540D\\u7A31-\\u7248\\u672C\\u865F\")), mdx(\"p\", null, \"\\u9019\\u4E00\\u6B65\\u57F7\\u884C\\u7684\\u7D50\\u679C\\u9700\\u8981\\u5C07\\u5167\\u5BB9\\u8A18\\u9304\\u4E0B\\u4F86\\uFF0C\\u5728\\u4FEE\\u6539ELB\\u7684rule\\u6642\\u6703\\u9700\\u8981\\u7528\\u5230\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Create Target Group\\n  elb_target_group:\\n    vpc_id: \\\"{{ VPC }}\\\"\\n    region: \\\"{{ Region }}\\\"\\n    state: present\\n    name: \\\"{{ name }}\\\"\\n    protocol: http\\n    port: 80\\n    health_check_protocol: http\\n    health_check_interval: 30\\n    health_check_timeout: 5\\n    health_check_path: \\\"{{ HealthCheck.Path }}\\\"\\n    unhealthy_threshold_count: \\\"{{ HealthCheck.UnhealthyThreshold }}\\\"\\n    healthy_threshold_count: \\\"{{ HealthCheck.HealthyThreshold }}\\\"\\n    successful_response_codes: \\\"200\\\"\\n    target_type: instance\\n    deregistration_delay_timeout: 60\\n    tags:\\n      Cluster: \\\"{{ cluster }}\\\"\\n      ENV: \\\"{{ env }}\\\"\\n      Version: \\\"{{ version }}\\\"\\n      Name: \\\"{{ name }}\\\"\\n      CreateTime: \\\"{{ lookup('pipe','date +%Y%m%d') }}\\\"\\n  register: target_group_result\\n\")), mdx(\"h3\", null, \"Step2. \\u9023\\u7D50ELB \\u7684\\u898F\\u5247\"), mdx(\"p\", null, \"\\u9019\\u4E00\\u6B65\\u5728ansible\\u4E2D\\u9019\\u5B9A\\u8F03\\u70BA\\u8907\\u96DC\\u6240\\u4EE5\\u6539\\u7528\\u4E86aws cli\\u4F86\\u8655\\u7406\\uFF0C\\u5982\\u679C\\u4F60\\u60F3\\u7528\\u7D14\\u7684ansible\\u7684\\u65B9\\u5F0F\\u8655\\u7406\\uFF0C\\u53EF\\u4EE5\\u53C3\\u8003\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/modules/elb_application_lb_module.html#elb-application-lb-module\"\n  }), \"\\u9019\\u7BC7(elb_application_lb)\")), mdx(\"p\", null, \"ansible\\u7684\\u56DE\\u50B3\\u90FD\\u662F\\u9663\\u5217\\u7684\\u5F62\\u5F0F\\u6240\\u4EE5\\u5728\\u5B58\\u53D6result\\u7684\\u6642\\u5019\\u9700\\u8981\\u53D6\\u5F97\\u7B2C\\u4E00\\u7B46\\u8CC7\\u6599\\uFF08\\u5982\\u679C\\u4F60\\u5EFA\\u7ACB\\u4E86\\u591A\\u500Btarget group\\n\\u5C31\\u53EF\\u4EE5\\u7528loop\\u4F86\\u8655\\u7406\\uFF09\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Attach new target group to preparing load balancer rule\\n  shell: |\\n    aws elbv2 modify-rule \\\\\\n      --actions Type=forward,TargetGroupArn={{ target_group_result.results[0].target_group_arn }} \\\\\\n      --rule-arn {{ LoadBalancer.Preparing }} \\\\\\n      --region {{ Region }}\\n\")), mdx(\"h3\", null, \"Step3. \\u8A3B\\u518A\\u65B0\\u7684Task Definition\"), mdx(\"p\", null, \"\\u9019\\u4E00\\u6B65\\u9A5F\\u4F86\\u8AAA\\u61C9\\u8A72\\u662F\\u6700\\u8907\\u96DC\\u7684\\u4E00\\u90E8\\u5206\\uFF0C\\u6211\\u7684Task Definition\\u662F\\u7531\\u5C08\\u6848\\u4E2D\\u7684\\u4E00\\u500BConfiguration\\u6A94\\u6848\\u8A2D\\u5B9A\\n\\u5728CI\\u5EFA\\u7F6E\\u5B8C\\u6210\\u5F8C\\u4E0A\\u50B3\\u5230artifact server\\uFF0C\\u5728\\u57F7\\u884C\\u90E8\\u5C6C\\u6642\\u7528ansible\\u4E0B\\u8F09\\u5230Deploy server\\u4E0A\\u5728\\u8B80\\u53D6\\u5230\\nansible\\u7684\\u8B8A\\u6578\\u4E2D\\u3002\"), mdx(\"p\", null, \"\\u5728\\u5C08\\u6848\\u4E2D\\u7684Configuration\\u4E0D\\u662F\\u4E00\\u6574\\u4EFD\\u7684\\u8A2D\\u5B9A\\u503C\\uFF0C\\u4ED6\\u53EA\\u8A18\\u9304\\u4E86\\u4E00\\u90E8\\u5206\\u7684\\u8CC7\\u8A0A(ex: cpu, memory, family\\u7B49)\\n\\u4E3B\\u8981\\u7684\\u539F\\u56E0\\u662F\\u6709\\u4E9B\\u8CC7\\u6599\\u9700\\u8981\\u5728deploy\\u6642\\u624D\\u80FD\\u6C7A\\u5B9A(ex: image version, env...)\\uFF0C\\n\\u6240\\u4EE5\\u6211\\u6703\\u5728\\u8A3B\\u518Atask definition\\u524D\\u5148\\u900F\\u904Econfiguration\\u5EFA\\u7ACB\\u4E00\\u4EFD\\u5B8C\\u6574\\u7684task definition\\uFF0C\\n\\u518D\\u900F\\u904Eaws cli\\u4F86\\u8A3B\\u518A\\u65B0\\u7684task definition\"), mdx(\"p\", null, \"\\u9019\\u908A\\u4F60\\u6703\\u6709\\u500B\\u7591\\u554F\\uFF0C\\u70BA\\u4F55\\u4E0D\\u76F4\\u63A5\\u63A1\\u7528\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/modules/ecs_taskdefinition_module.html#ecs-taskdefinition-module\"\n  }), \"ansible module\"), \"\\n\\u5462?\\u4E3B\\u8981\\u539F\\u56E0\\u662F\\u4E4B\\u524D\\u6211\\u5011\\u5C31\\u6709ecs deploy\\u7684CD\\u6D41\\u7A0B\\uFF0C\\u7576\\u6642\\u5019\\u6709\\u4E9B\\u53C3\\u6578\\u6211\\u5011\\u9700\\u8981\\u4F46ansible\\u7121\\u6CD5\\u652F\\u63F4\\n\\u6240\\u4EE5\\u8F49\\u7528aws cli\\u7684\\u65B9\\u5F0F\\u9032\\u884C\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: \\\"Register Task Definition\\\"\\n  shell: |\\n    aws ecs register-task-definition \\\\\\n      --cli-input-json '{{ td_setting | to_json }}' \\\\\\n      --region {{ Region }};\\n\")), mdx(\"h3\", null, \"Step4. \\u65B0\\u5EFAECS Service\"), mdx(\"p\", null, \"\\u9019\\u4E00\\u6B65\\u6211\\u4F9D\\u820A\\u63A1\\u7528aws cli\\u4F86\\u5EFA\\u7ACBservice\\uFF0C\\u4E3B\\u8981\\u7684\\u539F\\u56E0\\u662F\\u6211\\u7684service\\u901A\\u5E38\\u6703\\u7531\\u5169\\u500Btarget group\\n\\u6307\\u5411\\u5169\\u500B\\u4E0D\\u540C\\u7684ELB\\u8207domain\\uFF0C\\u5728ansible\\u5B98\\u65B9\\u7DB2\\u7AD9\\u4E0A\\u4E26\\u6C92\\u6709\\u592A\\u591A\\u7684\\u8AAA\\u660E\\u8207\\u6240\\u9700\\u8981\\u7684\\u53C3\\u6578\\uFF0C\\u56E0\\u6B64\\u6211\\u8F49\\u7528\\u4E86\\naws cli\\uFF0C\\u5982\\u540Cstep3\\u6211\\u6703\\u5148\\u5C07\\u6240\\u9700\\u8981\\u7684\\u8A2D\\u5B9A\\u5728\\u4E00\\u500Bansible task\\u4E0A\\u505A\\u597D \\u7522\\u751F\\u4E86\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"service_setting\"), \"\\u7684\\u53C3\\u6578\\n\\u5728\\u57F7\\u884Ccli\\u6642\\u5C07\\u53C3\\u6578\\u8F49\\u63DB\\u6210JSON\\u4EE3\\u5165\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: \\\"Create ECS service {{ service_setting.serviceName }}\\\"\\n  shell: |\\n    aws ecs create-service \\\\\\n      --service-name '{{ service_setting.serviceName }}' \\\\\\n      --cli-input-json '{{ service_setting | to_json }}' \\\\\\n      --region {{ Region }};\\n  register: ecs_service_create\\n\")), mdx(\"h2\", null, \"\\u5207\\u63DBService Version\"), mdx(\"p\", null, \"\\u5207\\u63DB\\u670D\\u52D9\\u7248\\u672C\\u9019\\u662F\\u4E00\\u500B\\u6BD4\\u8F03\\u5927\\u7684\\u5DE5\\u7A0B\\uFF0C\\u525B\\u624D\\u7684\\u90E8\\u7F72\\u7684\\u8907\\u96DC\\u5EA6\\u66F4\\u9AD8\\u4E00\\u4E9B\\uFF0C\\u4E3B\\u8981\\u6982\\u5FF5\\u5C31\\u662F\\u5C07\\u65B0\\u7522\\u751F\\u7684target group\\n\\u639B\\u8F09\\u5230\\u771F\\u6B63\\u7DDA\\u4E0A\\u670D\\u52D9\\u7684ELB\\u4E0A\\uFF0C\\u4E0D\\u904E\\u5462\\u9019\\u4EF6\\u4E8B\\u60C5\\u884D\\u751F\\u4E86\\u8A31\\u591A\\u7D30\\u7D30\\u5C0F\\u5C0F\\u7684\\u9805\\u76EE\\u8981\\u8655\\u7406\\u7684\\u7D30\\u7BC0\\u4E5F\\u6BD4\\u8F03\\u591A\"), mdx(\"h3\", null, \"Step1. \\u78BA\\u8A8DTarget group health count\"), mdx(\"p\", null, \"\\u8981\\u5207\\u63DB\\u524D\\u4E00\\u5B9A\\u8981\\u5148\\u6AA2\\u67E5Target group\\u7684target\\u72C0\\u614B\\uFF0C\\u5982\\u679C\\u6C92\\u78BA\\u8A8D\\u5207\\u63DB\\u4E86\\u4E00\\u500B\\u9084\\u5728\\u505Ahealth check\\u7684target\\ngroup\\u5C31\\u6703\\u767C\\u751F\\u7DDA\\u4E0A\\u53EF\\u80FD\\u7576\\u4E0B\\u6C92\\u6709\\u6A5F\\u5668\\u670D\\u52D9\\u7684\\u7A98\\u5883\\uFF0C\\u6240\\u4EE5\\u7B2C\\u4E00\\u6B65\\u80AF\\u5B9A\\u5C31\\u662F\\u78BA\\u8A8Dhealth count\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Get Target Group Informantion\\n  elb_target_group_info:\\n    region: \\\"{{ Region }}\\\"\\n    collect_targets_health: yes\\n    names: \\\"{{ switch_target_group }}\\\"\\n  register: target_group_result\\n  failed_when: (target_group_result | json_query('target_groups[].targets_health_description[].target_health.state') | length) < {{ AutoScaling.Desired }}\\n\")), mdx(\"p\", null, \"\\u7576\\u5982\\u679Ctarget\\u7684health count\\u6C92\\u6709\\u9054\\u5230\\u8981\\u6C42\\u6578\\u91CF\\u6211\\u5C31\\u8B93playbook\\u5931\\u6557\\uFF0C\\u4E4B\\u524D\\u5728ec2\\u7684\\u505A\\u6CD5\\u662F\\u8981\\u5B8C\\u5168healthy\\n\\u624D\\u80FD\\u5920\\u5F80\\u4E0B\\u904B\\u884C\\u4F46\\u9019\\u6A23\\u6703\\u9047\\u5230\\u7576\\u4E0B\\u8981switch\\u6703\\u7121\\u6CD5switch\\uFF0C\\u6240\\u4EE5\\u9019\\u6B21\\u6539\\u8B8A\\u4E00\\u4E0B\\u505A\\u6CD5\\u8B93target\\u7684health count\\n\\u53EA\\u8981\\u5927\\u65BC\\u8981\\u6C42\\u6578\\u91CF\\u5373\\u53EF\"), mdx(\"h3\", null, \"Step2. \\u53D6\\u5F97public\\u7576\\u524D\\u7684target group\"), mdx(\"p\", null, \"\\u70BA\\u4EC0\\u9EBC\\u8981\\u53D6\\u5F97\\u7576\\u524D\\u7684target group\\uFF1F\\u4E3B\\u8981\\u539F\\u56E0\\u662F\\u6015\\u77AC\\u65B7\\u7684\\u60C5\\u6CC1\\u767C\\u751F\\uFF0C\\u6240\\u4EE5\\u5728\\u5207\\u63DB\\u7684\\u6642\\u5019\\u6703\\u6709\\u4E00\\u500B\\u6642\\u9593\\u5340\\u9593\\u540C\\u6642\\n\\u6709\\u5169\\u500B\\u7248\\u672C\\u5728\\u904B\\u884C\\u6700\\u5F8C\\u518D\\u5C07\\u820A\\u7248\\u672C\\u79FB\\u9664\"), mdx(\"p\", null, \"\\u53D6\\u5F97ELB\\u4E2D\\u7684rule\\u8CC7\\u6599ansible\\u4E26\\u6C92\\u6709\\u592A\\u597D\\u7684\\u65B9\\u5F0F\\u8655\\u7406\\uFF0C\\u6240\\u4EE5\\u9019\\u9053\\u984C\\u9084\\u662F\\u53EA\\u80FD\\u9760aws cli\\u4F86\\u5354\\u52A9\\u4E86\\uFF0Caws cli \\u53EA\\u9700\\u8981\\u8F38\\u5165public rule\\u7684arn\\u5C31\\u53EF\\u4EE5\\u53D6\\u5F97\\u4E86\\n\\u8A73\\u7D30\\u53EF\\u4EE5\\u770B\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elbv2/describe-rules.html\"\n  }), \"aws cli\"), \" \\u7684\\u5B98\\u65B9\\u6587\\u4EF6\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: \\\"Get load balancer rule for {{ service_name | upper }}\\\"\\n  shell: |\\n    aws elbv2 describe-rules \\\\\\n      --rule-arns {{ LoadBalancer.Public | join(' ') }} \\\\\\n      --region {{ Region }}\\n  register: current_rules\\n\")), mdx(\"p\", null, \"\\u63A5\\u4E0B\\u4F86\\u9019\\u500B\\u5C31\\u9700\\u8981\\u6BD4\\u8F03\\u8010\\u5FC3\\u5730\\u4F86\\u8655\\u7406\\u4E86\\uFF0C\\u56E0\\u70BAansible shell\\u7684\\u56DE\\u50B3result\\u6703\\u6709\\u500Bstdout\\u5C6C\\u6027\\uFF0C\\u9019\\u5C31\\u662Faws cli\\u6700\\u5F8C\\u56DE\\u50B3\\u7684\\u8CC7\\u6599\\uFF0C\\u6240\\u4EE5\\u6211\\u5011\\u8981\\u89E3\\u6790\\u9019\\u500B\\n\\u8CC7\\u8A0A\\uFF0C\\u7136\\u5F8Cansible \\u7684json_query\\u662F\\u7528\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://jmespath.org/\"\n  }), \"\\u9019\\u500B\"), \"\\u4F86\\u5BE6\\u4F5C\\u7684\\uFF0C\\u6240\\u4EE5\\u6211\\u5011\\u53EF\\u4EE5\\u900F\\u904E\\u9019\\u500B\\u5148\\u53D6\\u5F97\\u6211\\u5011\\u60F3\\u8981\\u7684\\u7D50\\u679C\\uFF0C\\u7576\\u7136\\u4ED6\\u6703\\u6709\\u4E00\\u500Btarget group arn\\u8CC7\\u6599\\n\\u4E0D\\u904E\\u6211\\u5011\\u5F8C\\u9762\\u9700\\u8981\\u4E00\\u4E9B\\u58D3\\u5728target group tag\\u4E0A\\u7684\\u8CC7\\u6599\\uFF0C\\u6240\\u4EE5\\u6211\\u5728\\u9019\\u908A\\u628A\\u4ED6\\u5148\\u53D6\\u56DE\\u4F86\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Get target group informantion of current load balance setting\\n  elb_target_group_info:\\n    region: \\\"{{ Region }}\\\"\\n    target_group_arns: \\\"{{ current_rules.stdout | from_json | json_query('Rules[].Actions[].ForwardConfig.TargetGroups[].TargetGroupArn') }}\\\"\\n  register: current_target_group_result\\n\")), mdx(\"h3\", null, \"Step3. \\u628APrepare\\u7684target group\\u8DDFpublic\\u7684\\u6574\\u5408\\u5728\\u4E00\\u8D77\"), mdx(\"p\", null, \"\\u5728ansible\\u9084\\u6642\\u6C92\\u6709\\u4E00\\u500B\\u7C21\\u55AE\\u7684\\u8A2D\\u5B9A\\uFF0C\\u53BB\\u4FEE\\u6539ELB rule\\u7684target group\\u9023\\u7D50\\uFF0C\\u6240\\u4EE5\\u9084\\u662F\\u5F97\\u900F\\u904Eaws cli\\u4F86\\u4F5C\\u4E86\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u4E0B\\u9762\\u7684ansible tasks\\u6211\\u5C07\\u5B83\\u8A2D\\u5B9A\\u6210\\u4E00\\u500Brole\\uFF0C\\u4E3B\\u8981\\u539F\\u56E0\\u662F\\u6211\\u6709\\u5169\\u500Btarget group\\u5728\\u8655\\u7406\\uFF0C\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"set_fact\"), \"\\u53BB\\u8DD1loop\\u7684\\u60C5\\u6CC1\\u6703\\u6BD4\\u8F03\\u8907\\u96DC\\u6240\\u4EE5\\u6211\\u8A2D\\u8A08\\u6210\\u4E00\\u500Brole\\uFF0C\\u5728playbook\\u4E0A\\u63A1\\u7528loop\\n\\u4F86\\u57F7\\u884C\\u9019\\u500Brole\\uFF0C\\u5982\\u6B64\\u4E00\\u4F86\\u908F\\u8F2F\\u6BD4\\u8F03\\u6E05\\u6670\\u4E5F\\u6BD4\\u8F03\\u597D\\u7DAD\\u8B77\")), mdx(\"p\", null, \"\\u5982\\u6B64\\u4E00\\u4F86\\u5728public \\u7684\\u898F\\u5247\\u4E0A\\u5C31\\u6709\\u5169\\u500Btarget group\\u7684\\u5BB9\\u5668\\u5728\\u670D\\u52D9\\u4E86\\uFF0C\\u9019\\u6A23\\u7684\\u60C5\\u6CC1\\u6211\\u6703\\u8B93\\u4ED6\\u7DAD\\u6301\\u7D041\\u5206\\u9418\\uFF0C\\u518D\\u5C07\\u539F\\u5148\\u7684target group\\u79FB\\u9664\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Generate load balance rule setting\\n set_fact:\\n   target_rule_setting: |\\n     [\\n       {\\n         \\\"Type\\\": \\\"forward\\\",\\n         \\\"ForwardConfig\\\": {\\n           \\\"TargetGroups\\\": [\\n             {\\n               \\\"TargetGroupArn\\\": '{{ target_group[0].arn }}',\\n               \\\"Weight\\\": {{ target_group[0].weight }}\\n             },\\n             {\\n               \\\"TargetGroupArn\\\": '{{ target_group[1].arn }}',\\n               \\\"Weight\\\": {{ target_group[1].weight }}\\n             }\\n           ],\\n           \\\"TargetGroupStickinessConfig\\\": {\\n             \\\"Enabled\\\": false\\n           }\\n         }\\n       }\\n     ]\\n- name: \\\"Attach to public rule\\\"\\n shell: |\\n   aws elbv2 modify-rule \\\\\\n     --actions '{{ target_rule_setting | to_json }}' \\\\\\n     --rule-arn {{ target_rule }} \\\\\\n     --region {{ Region }}\\n\\n- name: \\\"Remove old version\\\"\\n shell: |\\n   aws elbv2 modify-rule \\\\\\n     --actions Type=forward,TargetGroupArn={{ item }} \\\\\\n     --rule-arn {{ LoadBalancer.Release[ansible_loop.index0].Rule }} \\\\\\n     --region {{ Region }}\\n\")), mdx(\"h3\", null, \"Step4. \\u8655\\u7F6E\\u820A\\u7248\\u672C\\u7684\\u670D\\u52D9\"), mdx(\"p\", null, \"\\u79FB\\u8F49\\u6210\\u529F\\u5F8C\\u9700\\u8981\\u628A\\u820A\\u7248\\u672C\\u7684service\\u95DC\\u6A5F\\u6216\\u662F\\u79FB\\u9664\\uFF0C\\u6211\\u7684\\u9078\\u64C7\\u662F\\u66AB\\u6642\\u95DC\\u9589\"), mdx(\"p\", null, \"\\u95DC\\u9589\\u670D\\u52D9\\u807D\\u8D77\\u4F86\\u5F88\\u7C21\\u55AE\\uFF0C\\u4F46\\u6211\\u7528aws cli\\u57F7\\u884C\\u5C07\\u9700\\u6C42\\u503C\\u6539\\u62100\\uFF0C\\u4F46....\\u4E00\\u9EDE\\u6548\\u679C\\u90FD\\u6C92\\u6709\\uFF01\\uFF01\"), mdx(\"p\", null, \"\\u9084\\u8A18\\u5F97\\u4E00\\u958B\\u59CB\\u8A2D\\u5B9A\\u7684autoscaling\\u55CE....\\u6C92\\u932F\\u5C31\\u662F\\u4ED6\\uFF01\\u7576\\u4F60\\u628Adesired\\u6539\\u62100\\uFF0C\\u6703\\u8DDFautoscaling\\u8A2D\\u5B9A\\u7684\\u767C\\u751F\\u885D\\u7A81\\u6240\\u4EE5\\u8B8A\\u5F97\\u7121\\u6548\"), mdx(\"p\", null, \"\\u5728\\u8ABF\\u6574desired\\u6539\\u62100\\u524D\\uFF0C\\u8981\\u628Aautoscaling\\u8A2D\\u5B9A\\u79FB\\u9664\\u624D\\u80FD\\u9806\\u5229\\u7684\\u95DC\\u9589service\\u5C07cluster\\u7684\\u8CC7\\u6E90\\u91CB\\u51FA\\uFF01\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Shutdown ECS service\\n  shell: |\\n    aws application-autoscaling register-scalable-target \\\\\\n      --service-namespace ecs \\\\\\n      --scalable-dimension ecs:service:DesiredCount \\\\\\n      --resource-id service/{{ current_target_group_result.target_groups[0].tags[\\\"Cluster\\\"] }}/{{ current_target_group_result.target_groups[0].tags[\\\"Name\\\"] }} \\\\\\n      --min-capacity 0 \\\\\\n      --max-capacity 0 \\\\\\n      --region {{ Region }};\\n    aws ecs update-service \\\\\\n      --cluster {{ current_target_group_result.target_groups[0].tags[\\\"Cluster\\\"] }} \\\\\\n      --service {{ current_target_group_result.target_groups[0].tags[\\\"Name\\\"] }} \\\\\\n      --desired-count 0 \\\\\\n      --region {{ Region }};\\n\")), mdx(\"h3\", null, \"Step5. \\u79FB\\u9664\"), mdx(\"p\", null, \"\\u9019\\u662F\\u6574\\u500B\\u90E8\\u7F72\\u6D41\\u7A0B\\u7684\\u5C3E\\u8072\\u4E86\\uFF08\\u6216\\u662F\\u4F60\\u53EF\\u4EE5\\u9078\\u64C7\\u4E0D\\u505A....\\uFF09\"), mdx(\"p\", null, \"\\u6211\\u7684\\u505A\\u6CD5\\u662F\\u5148\\u5C07\\u6574\\u500Becs cluster\\u7684service\\u5217\\u51FA\\u4F86\\uFF0C\\u7136\\u5F8C\\u53D6\\u5F97target group\\u8CC7\\u6599\\uFF0C\\u518D\\u7531target group\\u8CC7\\u6599\\u53D6\\u5F97tag\\u662F\\u5426\\u542B\\u6709\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsolete\"), \"\\u7684tag\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Get obsolete target group info\\n  elb_target_group_info:\\n    region: \\\"{{ Region }}\\\"\\n    target_group_arns: \\\"{{ target_group_arn | json_query('loadBalancers[].targetGroupArn') }}\\\"\\n  register: ecs_tg_result\\n\\n- name: Delete obsolete ECS service and target group\\n  shell: |\\n    aws ecs delete-service \\\\\\n      --cluster {{ ecs_tg_result.target_groups[0].tags['Cluster'] }} \\\\\\n      --service {{ ecs_tg_result.target_groups[0].tags['Service'] }} \\\\\\n      --region {{ Region }} ;\\n    aws elbv2 delete-target-group \\\\\\n      --target-group-arn {{ ecs_tg_result.target_groups[0].target_group_arn }} \\\\\\n      --region {{ Region }} ;\\n    aws elbv2 delete-target-group \\\\\\n      --target-group-arn {{ ecs_tg_result.target_groups[1].target_group_arn }} \\\\\\n      --region {{ Region }} ;\\n  when: ecs_tg_result.target_groups[0].tags['Obsolete'] is defined\\n\")), mdx(\"h3\", null, \"Step6. \\u6A19\\u8A18\"), mdx(\"p\", null, \"\\u90E8\\u7F72\\u7684\\u6700\\u5F8C\\u4E00\\u6B65\\uFF0C\\u6A19\\u8A18\\u5DF2\\u7D93\\u88AB\\u95DC\\u9589\\u7684\\u670D\\u52D9\\u8B8A\\u6210\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsolete\")), mdx(\"p\", null, \"\\u9019\\u662F\\u70BA\\u4E86\\u4E0B\\u6B21\\u90E8\\u7F72\\u53EF\\u4EE5\\u628A\\u9019\\u4E9B\\u670D\\u52D9\\u522A\\u9664\\uFF0C\\u5982\\u679C\\u524D\\u4E00\\u500B\\u6B65\\u9A5F\\u4E0D\\u505A\\u7684\\u8A71\\uFF0C\\u9019\\u500B\\u6B65\\u9A5F\\u4E5F\\u662F\\u53EF\\u4EE5\\u7701\\u7565\\u7684\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Configure obsolete target group\\n shell: |\\n   aws elbv2 add-tags \\\\\\n     --resource-arns {{ item.target_group_arn }} \\\\\\n     --tags '[{\\\"Key\\\": \\\"Obsolete\\\", \\\"Value\\\": \\\"yes\\\"}]' \\\\\\n     --region {{ Region }}\\n loop: \\\"{{ current_target_group_result.target_groups }}\\\"\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"AWS ECS Preparing Release 紀錄","description":"我們在aws 做Production deploy的時候，都會有一個pre production的環境，這個環境主要是為了在部署流程結束後可以做概念性驗證的環境 （主要測試：db connection是否正常、網路連線、裝機腳本等等）另一個方面可以預熱application，不過我們開始有越來越多採用docker的 application並且使用ECS的部署模式，但是ECS的Service建立後就無法修改Target Group，因此沒辦法如同EC2的部署模式只在最後切換Target Group","date":"03 Sep 2020","tags":["ecs","aws","cd","devops","provisioned","ansible"]},"fields":{"path":"/2020/09/03/ecs-deploy-preparing"}}},"pageContext":{"id":"ca510641-61e7-5084-b37f-f8a4c4724bf8"}},"staticQueryHashes":["1460034776","176875958","2579648174","3564308881","3673915224"]}