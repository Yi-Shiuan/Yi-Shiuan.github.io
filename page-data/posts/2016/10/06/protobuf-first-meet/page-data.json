{"componentChunkName":"component---src-pages-posts-tsx","path":"/posts/2016/10/06/protobuf-first-meet/","result":{"data":{"mdx":{"id":"b0b16e51-afef-5174-b33e-f431f6ea5f47","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"[ProtoBuf] 初次見面\",\n  \"description\": \"目前會採用ProtoBuf序列化是因為先前使用JSON有效能上的問題與在存取Redis上產生較高的延遲，所以改採用ProtoBuf來作為資料序列化與存放到Redis的主要格式。雖然在閱讀上需要自己寫小工具做轉譯，但在一般情況擁有較好的效能展現。\",\n  \"tags\": [\"ProtoBuf\", \"serialize\", \"deserialize\"],\n  \"categories\": [\"ProtoBuf\"],\n  \"date\": \"2016-10-06T05:30:16.000Z\",\n  \"published\": true,\n  \"comment\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ProtoBuf \\u521D\\u6B21\\u898B\\u9762\"), mdx(\"h2\", null, \"\\u4EC0\\u9EBC\\u662FProtoBuf\\uFF1F\"), mdx(\"p\", null, \"\\u9019\\u662F\\u4E00\\u500BGoogle\\u6240\\u958B\\u767C\\u51FA\\u7684\\u8CC7\\u6599\\u5132\\u5B58\\u7D50\\u69CB\\u6216\\u7269\\u4EF6\\uFF08\\u53CD\\uFF09\\u5E8F\\u5217\\u7684\\u7D50\\u69CB\\uFF08\\u5982 JOSN\\u3001XML\\u3001msgpack\\u7B49\\uFF09\\uFF0C\\u5728\\u5B98\\u65B9\\u7DB2\\u7AD9\\u7684\\u4ECB\\u7D39\\u4E0A\\u6709\\u9019\\u9EBC\\u4E00\\u6BB5\\uFF1A\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    \"parentName\": \"blockquote\"\n  }, \"Protocol buffers are Google's language-neutral,\\nplatform-neutral, extensible mechanism for serializing structured data\\n\\u2013 think XML, but smaller, faster, and simpler.\\nYou define how you want your data to be structured once,\\nthen you can use special generated source code to easily write\\nand read your structured data to and from a variety of data streams and using a variety of languages.\\n\", mdx(\"p\", {\n    style: {\n      \"textAlign\": \"right\"\n    }\n  }, \"from \", mdx(\"a\", {\n    href: \"https://developers.google.com/protocol-buffers/\",\n    target: \"_blank\"\n  }, mdx(\"a\", {\n    \"href\": \"https://developers.google.com/protocol-buffers/\"\n  }, \"https://developers.google.com/protocol-buffers/\"))))), mdx(\"p\", null, \"ProtoBuf\\u652F\\u63F4\\u5404\\u7A2E\\u4E3B\\u6D41\\u7684\\u8A9E\\u8A00(ex: C#, C++, JAVA\\u7B49)\\uFF0C\\n\\u5728\\u5B98\\u65B9\\u4E2D\\u7684\", mdx(\"a\", {\n    \"href\": \"https://github.com/google/protobuf\",\n    \"parentName\": \"p\"\n  }, \"GitHub\"), \"\\u4E0A\\u6709\\u76EE\\u524D\\u652F\\u63F4\\u7684\\u8A9E\\u8A00\\u5BE6\\u505A\\uFF0C\\u6216\\u662FThird-party\\u641C\\u5C0B\\u76F8\\u95DC\\u7684\\u5BE6\\u505A\\u5957\\u4EF6\\u3002\"), mdx(\"h3\", null, \"ProtoBuf \\u512A\\u9EDE\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"(\\u53CD)\\u5E8F\\u5217\", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"\\u901F\\u5EA6\\u5FEB\"), \"\\uFF0C\\u65B9\\u4FBF\\u65BC\\u7DB2\\u8DEF\\u50B3\\u8F38\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\\u7522\\u51FA\\u683C\\u5F0F\", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"\\u5167\\u5BB9\\u5C0F\"), \"\\uFF0C\\u65B9\\u4FBF\\u5B58\\u653E\\u81F3\\u6A94\\u6848\\u6216\\u5176\\u4ED6Service\")), mdx(\"h3\", null, \"ProtoBuf \\u7F3A\\u9EDE\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\\u4E8C\\u9032\\u4F4D\\u683C\\u5F0F\\uFF0C\\u96E3\\u4EE5\\u95B1\\u8B80\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\\u4F7F\\u7528\\u4E0A\\u5FC5\\u9808\\u5148\\u4F5C\\u5B9A\\u7FA9\\uFF0C\\u9700\\u8981\\u5148\\u8A2D\\u5B9A.proto\\u6A94\\u6848\")), mdx(\"h2\", null, \"\\u5728 C# \\u4E2D\\u4F7F\\u7528 ProtoBuf\"), mdx(\"p\", null, \"\\u5728\\u5C08\\u6848\\u4E2D\\u6211\\u662F\\u4F7F\\u7528third-party\\u7684\\u5957\\u4EF6\\uFF0C\", mdx(\"a\", {\n    \"href\": \"https://www.nuget.org/packages/protobuf-net\",\n    \"parentName\": \"p\"\n  }, \"ProtoBuf-net\"), \"\\n\\u5957\\u4EF6\\u53EF\\u4EE5\\u5728nuget\\u4E0A\\u627E\\u5230\\uFF0C\\u6703\\u9078\\u64C7\\u9019\\u500B\\u5957\\u4EF6\\u4E3B\\u8981\\u662F\\u56E0\\u70BA\\u5728\\u4F7F\\u7528\\u4E0A\\u8F03\\u70BA\\u7C21\\u4FBF\\uFF0C\\u4E5F\\u652F\\u63F4\\u8F03\\u591A\\u7684\\u8A2D\\u5B9A\\u7684\\u65B9\\u5F0F\\u4F86\\u505A\\u8CC7\\u6599\\uFF0C\\u8A2D\\u5B9A\\u7684\\u65B9\\u5F0F\\n\\u7A0D\\u5F8C\\u6703\\u6709\\u6BD4\\u8F03\\u8A73\\u7D30\\u4E00\\u4E9B\\u7684\\u4ECB\\u7D39\\u3002\"), mdx(\"h3\", null, \"\\u5B9A\\u7FA9\\u65B9\\u5F0F\"), mdx(\"p\", null, \"ProtoBuf-net\\u8A2D\\u5B9A\\u7684\\u65B9\\u5F0F\\u652F\\u63F4\\u4E86\\u4EE5\\u4E0B\\u4E09\\u7A2E\\u65B9\\u5F0F\"), mdx(\"h4\", null, \"Attribute\"), mdx(\"p\", null, \"\\u9019\\u500B\\u65B9\\u5F0F\\uFF0C\\u500B\\u4EBA\\u8A8D\\u70BA\\u662F\\u4E00\\u500B\\u8F03\\u597D\\u7684\\u8A2D\\u5B9A\\u65B9\\u5F0F\\uFF0C\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-cs\",\n    \"parentName\": \"pre\"\n  }, \"[ProtoContract]\\npublic class TestClass\\n{\\n    [ProtoMember(1)]\\n    public int TestA { get; set; }\\n\\n    [ProtoMember(2)]\\n    public string TestB { get; set; }\\n\\n    [ProtoMember(3)]\\n    public TestClassB TestC { get; set; }\\n}\\n\\n[ProtoContract]\\npublic class TestClassB\\n{\\n    ...\\n}\\n\")), mdx(\"p\", null, \"\\u9019\\u4E00\\u500B\\u8A2D\\u5B9A\\u65B9\\u5F0F\\u53EF\\u4EE5\\u4FEE\\u6539data model\\u540C\\u6642\\u4FEE\\u6539 Attribute \\u9019\\u6A23\\u5728\\u5718\\u968A\\u4F7F\\u7528\\u4E0A\\u53EF\\u4EE5\\u907F\\u514D\\u4FEE\\u6539data model\\u5F8C\\n\\u4E5F\\u53EF\\u99AC\\u4E0A\\u7DAD\\u8B77protobuf\\u7684\\u8A2D\\u5B9A\\uFF0C\\u907F\\u514D\\u5728runtime\\u6642\\u56E0\\u70BA\\u8A2D\\u5B9A\\u4E0A\\u9020\\u6210exception\\u3002\"), mdx(\"h4\", null, \".proto\\u6A94\\u6848\"), mdx(\"p\", null, \"\\u9019\\u4E00\\u500B\\u65B9\\u5F0F\\u662F\\u5B98\\u65B9\\u7684\\u6A19\\u6E96\\u8A2D\\u5B9A\\uFF0C\\u9019\\u500B\\u9700\\u8981\\u984D\\u5916\\u7522\\u751F\\u4E00\\u4EFD.proto\\u6A94\\u6848\\uFF0C\\u5B9A\\u7FA9\\u65B9\\u5F0F\\u8207\\u683C\\u5F0F\\u53EF\\u53C3\\u8003\\n\", mdx(\"a\", {\n    \"href\": \"https://developers.google.com/protocol-buffers/docs/csharptutorial\",\n    \"parentName\": \"p\"\n  }, \"\\u5B98\\u65B9\\u7DB2\\u7AD9\"), \"\\n\\u7684\\u8A2D\\u5B9A\\u3002\"), mdx(\"p\", null, \"\\u9019\\u4E00\\u500B\\u65B9\\u5F0F\\u56E0\\u70BA\\u591A\\u7522\\u751F\\u4E86\\u4E00\\u500B.proto\\u7684\\u6A94\\u6848\\uFF0C\\u5728\\u4FEE\\u6539data model\\u5F8C\\uFF0C\\u5FC5\\u9808\\u8981\\u518D\\u984D\\u5916\\u4FEE\\u6539.proto\\u7684\\u6A94\\u6848\\uFF0C\\n\\u6709\\u6642\\u5019\\u5728\\u958B\\u767C\\u4E0A\\u6703\\u6709\\u4E0D\\u4E00\\u81F4\\u7684\\u60C5\\u6CC1\\uFF1B\\u5728\\u4F7F\\u7528\\u4E0A\\u8207\\u8A2D\\u5B9A\\u4E0A\\u4E5F\\u76F8\\u5C0D\\u8F03\\u70BA\\u8907\\u96DC\\u3002\"), mdx(\"h4\", null, \"Runtime \\u5B9A\\u7FA9\"), mdx(\"p\", null, \"\\u9019\\u662F\\u5728Application\\u57F7\\u884C\\u671F\\u9593\\u7522\\u751F\\u4E00\\u4EFD RuntimeTypeModel\\uFF0C\\u5728Serializer\\u7684\\u6642\\u5019\\u6703\\u4EE5\\u9019\\u4E00\\u4EFDRuntimeTypeModel\\u70BA\\u4F60\\u7684\\ndata model\\u505A\\u5E8F\\u5217\\u5316\\uFF0C\\u4EE5\\u4E0B\\u63D0\\u4F9B\\u8A9E\\u6CD5\\u53C3\\u8003\\u8A2D\\u5B9A\\u65B9\\u5F0F\"), mdx(\"p\", null, \"\\u9019\\u4E00\\u500B\\u65B9\\u5F0F\\u6703\\u5C07\\u539F\\u5148\\u5B9A\\u7FA9\\u8986\\u84CB\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-cs\",\n    \"parentName\": \"pre\"\n  }, \"    var metaType = RuntimeTypeModel.Default.Add(typeof(TestClassA), true);\\n    metaType.AddSubType(100, typeof(TestA));\\n\\n    RuntimeTypeModel.Default.Add(typeof(TestA), false);\\n\")), mdx(\"p\", null, \"\\u9019\\u4E00\\u500B\\u6703\\u8907\\u5BEB(\\u6216\\u65B0\\u589E)\\u539F\\u5148\\u7684\\u5B9A\\u7FA9\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-cs\",\n    \"parentName\": \"pre\"\n  }, \"    var metaType = RuntimeTypeModel.Default;\\n    var testA = metaType[typeof(TestClassA)];\\n    testA.AddSubType(100, typeof(TestA));\\n    metaType.Add(typeof(TestA), false);\\n\")), mdx(\"h2\", null, \"\\u7E3D\\u7D50\"), mdx(\"p\", null, \"\\u76EE\\u524D\\u6703\\u63A1\\u7528ProtoBuf\\u5E8F\\u5217\\u5316\\u662F\\u56E0\\u70BA\\u5148\\u524D\\u4F7F\\u7528JSON\\u6709\\u6548\\u80FD\\u4E0A\\u7684\\u554F\\u984C\\u8207\\u5728\\u5B58\\u53D6Redis\\u4E0A\\u7522\\u751F\\u8F03\\u9AD8\\u7684\\u5EF6\\u9072\\uFF0C\\u6240\\u4EE5\\u6539\\u63A1\\u7528\\nProtoBuf\\u4F86\\u4F5C\\u70BA\\u8CC7\\u6599\\u5E8F\\u5217\\u5316\\u8207\\u5B58\\u653E\\u5230Redis\\u7684\\u4E3B\\u8981\\u683C\\u5F0F\\u3002\\u96D6\\u7136\\u5728\\u95B1\\u8B80\\u4E0A\\u9700\\u8981\\u81EA\\u5DF1\\u5BEB\\u5C0F\\u5DE5\\u5177\\u505A\\u8F49\\u8B6F\\uFF0C\\u4F46\\u5728\\u4E00\\u822C\\u60C5\\u6CC1\\n\\u64C1\\u6709\\u8F03\\u597D\\u7684\\u6548\\u80FD\\u5C55\\u73FE\\u3002\"), mdx(\"p\", null, \"\\u5176\\u4ED6\\u66F4\\u8A73\\u7D30\\u7684\\u4ECB\\u7D39\\u53EF\\u89C0\\u770B\\n\", mdx(\"a\", {\n    \"href\": \"https://github.com/mgravell/protobuf-net#advanced-subjects\",\n    \"parentName\": \"p\"\n  }, \"protobuf-net \\u5B98\\u65B9GitHub\")), mdx(\"h2\", null, \"\\u53C3\\u8003\\u8CC7\\u6599\"), mdx(\"p\", null, mdx(\"a\", {\n    \"href\": \"http://larrynung.github.io/2016/08/23/protobuf-net-Serialize-DeSerialize-data/\",\n    \"parentName\": \"p\"\n  }, \"Level up - protobuf-net - Serialize/DeSerialize data\")), mdx(\"p\", null, mdx(\"a\", {\n    \"href\": \"https://github.com/mgravell/protobuf-net\",\n    \"parentName\": \"p\"\n  }, \"protobuf-net \\u5B98\\u65B9GitHub\")), mdx(\"p\", null, mdx(\"a\", {\n    \"href\": \"https://github.com/google/protobuf\",\n    \"parentName\": \"p\"\n  }, \"Google protobuf\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"[ProtoBuf] 初次見面","description":"目前會採用ProtoBuf序列化是因為先前使用JSON有效能上的問題與在存取Redis上產生較高的延遲，所以改採用ProtoBuf來作為資料序列化與存放到Redis的主要格式。雖然在閱讀上需要自己寫小工具做轉譯，但在一般情況擁有較好的效能展現。","date":"06 Oct 2016"},"fields":{"path":"/2016/10/06/protobuf-first-meet/"}}},"pageContext":{"id":"b0b16e51-afef-5174-b33e-f431f6ea5f47"}},"staticQueryHashes":["2579648174","2711837957","3052742788","3564308881","4283910968"]}